ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"nrf24.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.nRF24_WriteReg,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	nRF24_WriteReg:
  24              	.LVL0:
  25              	.LFB112:
  26              		.file 1 "Drivers/BSP/nrf24l01/nrf24.c"
   1:Drivers/BSP/nrf24l01/nrf24.c **** // Functions to manage the nRF24L01+ transceiver
   2:Drivers/BSP/nrf24l01/nrf24.c **** 
   3:Drivers/BSP/nrf24l01/nrf24.c **** 
   4:Drivers/BSP/nrf24l01/nrf24.c **** #include "nrf24.h"
   5:Drivers/BSP/nrf24l01/nrf24.c **** 
   6:Drivers/BSP/nrf24l01/nrf24.c **** 
   7:Drivers/BSP/nrf24l01/nrf24.c **** // The address used to test presence of the transceiver,
   8:Drivers/BSP/nrf24l01/nrf24.c **** // note: should not exceed 5 bytes
   9:Drivers/BSP/nrf24l01/nrf24.c **** #define nRF24_TEST_ADDR            "nRF24"
  10:Drivers/BSP/nrf24l01/nrf24.c **** 
  11:Drivers/BSP/nrf24l01/nrf24.c **** 
  12:Drivers/BSP/nrf24l01/nrf24.c **** // Addresses of the address registers
  13:Drivers/BSP/nrf24l01/nrf24.c **** static const uint8_t nRF24_ADDR_REGS[7] = {
  14:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_RX_ADDR_P0,
  15:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_RX_ADDR_P1,
  16:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_RX_ADDR_P2,
  17:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_RX_ADDR_P3,
  18:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_RX_ADDR_P4,
  19:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_RX_ADDR_P5,
  20:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_TX_ADDR
  21:Drivers/BSP/nrf24l01/nrf24.c **** };
  22:Drivers/BSP/nrf24l01/nrf24.c **** 
  23:Drivers/BSP/nrf24l01/nrf24.c **** 
  24:Drivers/BSP/nrf24l01/nrf24.c **** // Reads a value of register
  25:Drivers/BSP/nrf24l01/nrf24.c **** // input:
  26:Drivers/BSP/nrf24l01/nrf24.c **** //   reg - number of register to read
  27:Drivers/BSP/nrf24l01/nrf24.c **** // return: value of register
  28:Drivers/BSP/nrf24l01/nrf24.c **** static uint8_t nRF24_ReadReg(uint8_t reg) {
  29:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t value;
  30:Drivers/BSP/nrf24l01/nrf24.c **** 
  31:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_L;
  32:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg & nRF24_MASK_REG_MAP);
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 2


  33:Drivers/BSP/nrf24l01/nrf24.c **** 	value = nRF24_LL_RW(nRF24_CMD_NOP);
  34:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
  35:Drivers/BSP/nrf24l01/nrf24.c **** 
  36:Drivers/BSP/nrf24l01/nrf24.c **** 	return value;
  37:Drivers/BSP/nrf24l01/nrf24.c **** }
  38:Drivers/BSP/nrf24l01/nrf24.c **** 
  39:Drivers/BSP/nrf24l01/nrf24.c **** // Writes a new value to the register
  40:Drivers/BSP/nrf24l01/nrf24.c **** // input:
  41:Drivers/BSP/nrf24l01/nrf24.c **** //   reg - number of register to write
  42:Drivers/BSP/nrf24l01/nrf24.c **** //   value - value to write
  43:Drivers/BSP/nrf24l01/nrf24.c **** static void nRF24_WriteReg(uint8_t reg, uint8_t value) {
  27              		.loc 1 43 56 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 43 56 is_stmt 0 view .LVU1
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
  40 0004 0D46     		mov	r5, r1
  44:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_L;
  41              		.loc 1 44 2 is_stmt 1 view .LVU2
  42 0006 0022     		movs	r2, #0
  43 0008 1021     		movs	r1, #16
  44              	.LVL1:
  45              		.loc 1 44 2 is_stmt 0 view .LVU3
  46 000a 1148     		ldr	r0, .L5
  47              	.LVL2:
  48              		.loc 1 44 2 view .LVU4
  49 000c FFF7FEFF 		bl	HW_GPIO_Write
  50              	.LVL3:
  45:Drivers/BSP/nrf24l01/nrf24.c **** 	if (reg < nRF24_CMD_W_REGISTER) {
  51              		.loc 1 45 2 is_stmt 1 view .LVU5
  52              		.loc 1 45 5 is_stmt 0 view .LVU6
  53 0010 1F2C     		cmp	r4, #31
  54 0012 0ED8     		bhi	.L2
  46:Drivers/BSP/nrf24l01/nrf24.c **** 		// This is a register access
  47:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_LL_RW(nRF24_CMD_W_REGISTER | (reg & nRF24_MASK_REG_MAP));
  55              		.loc 1 47 3 is_stmt 1 view .LVU7
  56              		.loc 1 47 43 is_stmt 0 view .LVU8
  57 0014 04F01F00 		and	r0, r4, #31
  58              		.loc 1 47 3 view .LVU9
  59 0018 40F02000 		orr	r0, r0, #32
  60 001c FFF7FEFF 		bl	nRF24_LL_RW
  61              	.LVL4:
  48:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_LL_RW(value);
  62              		.loc 1 48 3 is_stmt 1 view .LVU10
  63 0020 2846     		mov	r0, r5
  64 0022 FFF7FEFF 		bl	nRF24_LL_RW
  65              	.LVL5:
  66              	.L3:
  49:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 3


  50:Drivers/BSP/nrf24l01/nrf24.c **** 		// This is a single byte command or future command/register
  51:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_LL_RW(reg);
  52:Drivers/BSP/nrf24l01/nrf24.c **** 		if ((reg != nRF24_CMD_FLUSH_TX) && (reg != nRF24_CMD_FLUSH_RX) && \
  53:Drivers/BSP/nrf24l01/nrf24.c **** 				(reg != nRF24_CMD_REUSE_TX_PL) && (reg != nRF24_CMD_NOP)) {
  54:Drivers/BSP/nrf24l01/nrf24.c **** 			// Send register value
  55:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_LL_RW(value);
  56:Drivers/BSP/nrf24l01/nrf24.c **** 		}
  57:Drivers/BSP/nrf24l01/nrf24.c **** 	}
  58:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
  67              		.loc 1 58 2 view .LVU11
  68 0026 0122     		movs	r2, #1
  69 0028 1021     		movs	r1, #16
  70 002a 0948     		ldr	r0, .L5
  71 002c FFF7FEFF 		bl	HW_GPIO_Write
  72              	.LVL6:
  59:Drivers/BSP/nrf24l01/nrf24.c **** }
  73              		.loc 1 59 1 is_stmt 0 view .LVU12
  74 0030 38BD     		pop	{r3, r4, r5, pc}
  75              	.L2:
  51:Drivers/BSP/nrf24l01/nrf24.c **** 		if ((reg != nRF24_CMD_FLUSH_TX) && (reg != nRF24_CMD_FLUSH_RX) && \
  76              		.loc 1 51 3 is_stmt 1 view .LVU13
  77 0032 2046     		mov	r0, r4
  78 0034 FFF7FEFF 		bl	nRF24_LL_RW
  79              	.LVL7:
  52:Drivers/BSP/nrf24l01/nrf24.c **** 				(reg != nRF24_CMD_REUSE_TX_PL) && (reg != nRF24_CMD_NOP)) {
  80              		.loc 1 52 3 view .LVU14
  52:Drivers/BSP/nrf24l01/nrf24.c **** 				(reg != nRF24_CMD_REUSE_TX_PL) && (reg != nRF24_CMD_NOP)) {
  81              		.loc 1 52 66 is_stmt 0 view .LVU15
  82 0038 04F11F03 		add	r3, r4, #31
  83 003c DBB2     		uxtb	r3, r3
  52:Drivers/BSP/nrf24l01/nrf24.c **** 				(reg != nRF24_CMD_REUSE_TX_PL) && (reg != nRF24_CMD_NOP)) {
  84              		.loc 1 52 6 view .LVU16
  85 003e 022B     		cmp	r3, #2
  86 0040 F1D9     		bls	.L3
  53:Drivers/BSP/nrf24l01/nrf24.c **** 			// Send register value
  87              		.loc 1 53 36 view .LVU17
  88 0042 FF2C     		cmp	r4, #255
  89 0044 EFD0     		beq	.L3
  55:Drivers/BSP/nrf24l01/nrf24.c **** 		}
  90              		.loc 1 55 4 is_stmt 1 view .LVU18
  91 0046 2846     		mov	r0, r5
  92 0048 FFF7FEFF 		bl	nRF24_LL_RW
  93              	.LVL8:
  94 004c EBE7     		b	.L3
  95              	.L6:
  96 004e 00BF     		.align	2
  97              	.L5:
  98 0050 00080140 		.word	1073809408
  99              		.cfi_endproc
 100              	.LFE112:
 102              		.section	.text.nRF24_WriteMBReg,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	nRF24_WriteMBReg:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 4


 110              	.LVL9:
 111              	.LFB114:
  60:Drivers/BSP/nrf24l01/nrf24.c **** 
  61:Drivers/BSP/nrf24l01/nrf24.c **** // Reads to the buffer from a multi-byte register
  62:Drivers/BSP/nrf24l01/nrf24.c **** // input:
  63:Drivers/BSP/nrf24l01/nrf24.c **** //   reg - number of register to read
  64:Drivers/BSP/nrf24l01/nrf24.c **** //   pBuf - pointer to the buffer for register data
  65:Drivers/BSP/nrf24l01/nrf24.c **** //   count - number of bytes to read
  66:Drivers/BSP/nrf24l01/nrf24.c **** static void nRF24_ReadMBReg(uint8_t reg, uint8_t *pBuf, uint8_t count) {
  67:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_L;
  68:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg);
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	while (count--) { *pBuf++ = nRF24_LL_RW(nRF24_CMD_NOP); }
  70:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
  71:Drivers/BSP/nrf24l01/nrf24.c **** }
  72:Drivers/BSP/nrf24l01/nrf24.c **** 
  73:Drivers/BSP/nrf24l01/nrf24.c **** // Writes a buffer to a multi-byte register
  74:Drivers/BSP/nrf24l01/nrf24.c **** // input:
  75:Drivers/BSP/nrf24l01/nrf24.c **** //   reg - number of register to write
  76:Drivers/BSP/nrf24l01/nrf24.c **** //   pBuf - pointer to the buffer with data to write
  77:Drivers/BSP/nrf24l01/nrf24.c **** //   count - number of bytes to write
  78:Drivers/BSP/nrf24l01/nrf24.c **** static void nRF24_WriteMBReg(uint8_t reg, uint8_t *pBuf, uint8_t count) {
 112              		.loc 1 78 73 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		.loc 1 78 73 is_stmt 0 view .LVU20
 117 0000 70B5     		push	{r4, r5, r6, lr}
 118              	.LCFI1:
 119              		.cfi_def_cfa_offset 16
 120              		.cfi_offset 4, -16
 121              		.cfi_offset 5, -12
 122              		.cfi_offset 6, -8
 123              		.cfi_offset 14, -4
 124 0002 0546     		mov	r5, r0
 125 0004 0C46     		mov	r4, r1
 126 0006 1646     		mov	r6, r2
  79:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_L;
 127              		.loc 1 79 2 is_stmt 1 view .LVU21
 128 0008 0022     		movs	r2, #0
 129              	.LVL10:
 130              		.loc 1 79 2 is_stmt 0 view .LVU22
 131 000a 1021     		movs	r1, #16
 132              	.LVL11:
 133              		.loc 1 79 2 view .LVU23
 134 000c 0A48     		ldr	r0, .L12
 135              	.LVL12:
 136              		.loc 1 79 2 view .LVU24
 137 000e FFF7FEFF 		bl	HW_GPIO_Write
 138              	.LVL13:
  80:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg);
 139              		.loc 1 80 2 is_stmt 1 view .LVU25
 140 0012 2846     		mov	r0, r5
 141 0014 FFF7FEFF 		bl	nRF24_LL_RW
 142              	.LVL14:
  81:Drivers/BSP/nrf24l01/nrf24.c **** 	while (count--) {
 143              		.loc 1 81 2 view .LVU26
 144              	.L8:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 5


 145              		.loc 1 81 8 view .LVU27
 146              		.loc 1 81 14 is_stmt 0 view .LVU28
 147 0018 731E     		subs	r3, r6, #1
 148 001a DDB2     		uxtb	r5, r3
 149              	.LVL15:
 150              		.loc 1 81 8 view .LVU29
 151 001c 2EB1     		cbz	r6, .L11
  82:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_LL_RW(*pBuf++);
 152              		.loc 1 82 3 is_stmt 1 view .LVU30
 153              	.LVL16:
 154              		.loc 1 82 3 is_stmt 0 view .LVU31
 155 001e 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 156              	.LVL17:
 157              		.loc 1 82 3 view .LVU32
 158 0022 FFF7FEFF 		bl	nRF24_LL_RW
 159              	.LVL18:
  81:Drivers/BSP/nrf24l01/nrf24.c **** 	while (count--) {
 160              		.loc 1 81 14 view .LVU33
 161 0026 2E46     		mov	r6, r5
 162 0028 F6E7     		b	.L8
 163              	.L11:
  83:Drivers/BSP/nrf24l01/nrf24.c **** 	}
  84:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 164              		.loc 1 84 2 is_stmt 1 view .LVU34
 165 002a 0122     		movs	r2, #1
 166 002c 1021     		movs	r1, #16
 167 002e 0248     		ldr	r0, .L12
 168 0030 FFF7FEFF 		bl	HW_GPIO_Write
 169              	.LVL19:
  85:Drivers/BSP/nrf24l01/nrf24.c **** }
 170              		.loc 1 85 1 is_stmt 0 view .LVU35
 171 0034 70BD     		pop	{r4, r5, r6, pc}
 172              	.LVL20:
 173              	.L13:
 174              		.loc 1 85 1 view .LVU36
 175 0036 00BF     		.align	2
 176              	.L12:
 177 0038 00080140 		.word	1073809408
 178              		.cfi_endproc
 179              	.LFE114:
 181              		.section	.text.nRF24_ReadMBReg,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu softvfp
 188              	nRF24_ReadMBReg:
 189              	.LVL21:
 190              	.LFB113:
  66:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_L;
 191              		.loc 1 66 72 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
  66:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_L;
 195              		.loc 1 66 72 is_stmt 0 view .LVU38
 196 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 6


 197              	.LCFI2:
 198              		.cfi_def_cfa_offset 16
 199              		.cfi_offset 4, -16
 200              		.cfi_offset 5, -12
 201              		.cfi_offset 6, -8
 202              		.cfi_offset 14, -4
 203 0002 0546     		mov	r5, r0
 204 0004 0C46     		mov	r4, r1
 205 0006 1646     		mov	r6, r2
  67:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg);
 206              		.loc 1 67 2 is_stmt 1 view .LVU39
 207 0008 0022     		movs	r2, #0
 208              	.LVL22:
  67:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg);
 209              		.loc 1 67 2 is_stmt 0 view .LVU40
 210 000a 1021     		movs	r1, #16
 211              	.LVL23:
  67:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg);
 212              		.loc 1 67 2 view .LVU41
 213 000c 0A48     		ldr	r0, .L19
 214              	.LVL24:
  67:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg);
 215              		.loc 1 67 2 view .LVU42
 216 000e FFF7FEFF 		bl	HW_GPIO_Write
 217              	.LVL25:
  68:Drivers/BSP/nrf24l01/nrf24.c **** 	while (count--) { *pBuf++ = nRF24_LL_RW(nRF24_CMD_NOP); }
 218              		.loc 1 68 2 is_stmt 1 view .LVU43
 219 0012 2846     		mov	r0, r5
 220 0014 FFF7FEFF 		bl	nRF24_LL_RW
 221              	.LVL26:
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 222              		.loc 1 69 2 view .LVU44
 223              	.L15:
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 224              		.loc 1 69 8 discriminator 1 view .LVU45
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 225              		.loc 1 69 14 is_stmt 0 discriminator 1 view .LVU46
 226 0018 731E     		subs	r3, r6, #1
 227 001a DDB2     		uxtb	r5, r3
 228              	.LVL27:
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 229              		.loc 1 69 8 discriminator 1 view .LVU47
 230 001c 36B1     		cbz	r6, .L18
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 231              		.loc 1 69 20 is_stmt 1 discriminator 2 view .LVU48
 232              	.LVL28:
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 233              		.loc 1 69 30 is_stmt 0 discriminator 2 view .LVU49
 234 001e FF20     		movs	r0, #255
 235 0020 FFF7FEFF 		bl	nRF24_LL_RW
 236              	.LVL29:
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 237              		.loc 1 69 28 discriminator 2 view .LVU50
 238 0024 04F8010B 		strb	r0, [r4], #1
 239              	.LVL30:
  69:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 240              		.loc 1 69 14 discriminator 2 view .LVU51
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 7


 241 0028 2E46     		mov	r6, r5
 242 002a F5E7     		b	.L15
 243              	.L18:
  70:Drivers/BSP/nrf24l01/nrf24.c **** }
 244              		.loc 1 70 2 is_stmt 1 view .LVU52
 245 002c 0122     		movs	r2, #1
 246 002e 1021     		movs	r1, #16
 247 0030 0148     		ldr	r0, .L19
 248 0032 FFF7FEFF 		bl	HW_GPIO_Write
 249              	.LVL31:
  71:Drivers/BSP/nrf24l01/nrf24.c **** 
 250              		.loc 1 71 1 is_stmt 0 view .LVU53
 251 0036 70BD     		pop	{r4, r5, r6, pc}
 252              	.LVL32:
 253              	.L20:
  71:Drivers/BSP/nrf24l01/nrf24.c **** 
 254              		.loc 1 71 1 view .LVU54
 255              		.align	2
 256              	.L19:
 257 0038 00080140 		.word	1073809408
 258              		.cfi_endproc
 259              	.LFE113:
 261              		.section	.text.nRF24_ReadReg,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu softvfp
 268              	nRF24_ReadReg:
 269              	.LVL33:
 270              	.LFB111:
  28:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t value;
 271              		.loc 1 28 43 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
  28:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t value;
 275              		.loc 1 28 43 is_stmt 0 view .LVU56
 276 0000 38B5     		push	{r3, r4, r5, lr}
 277              	.LCFI3:
 278              		.cfi_def_cfa_offset 16
 279              		.cfi_offset 3, -16
 280              		.cfi_offset 4, -12
 281              		.cfi_offset 5, -8
 282              		.cfi_offset 14, -4
 283 0002 0446     		mov	r4, r0
  29:Drivers/BSP/nrf24l01/nrf24.c **** 
 284              		.loc 1 29 2 is_stmt 1 view .LVU57
  31:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg & nRF24_MASK_REG_MAP);
 285              		.loc 1 31 2 view .LVU58
 286 0004 0A4D     		ldr	r5, .L23
 287 0006 0022     		movs	r2, #0
 288 0008 1021     		movs	r1, #16
 289 000a 2846     		mov	r0, r5
 290              	.LVL34:
  31:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_LL_RW(reg & nRF24_MASK_REG_MAP);
 291              		.loc 1 31 2 is_stmt 0 view .LVU59
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 8


 292 000c FFF7FEFF 		bl	HW_GPIO_Write
 293              	.LVL35:
  32:Drivers/BSP/nrf24l01/nrf24.c **** 	value = nRF24_LL_RW(nRF24_CMD_NOP);
 294              		.loc 1 32 2 is_stmt 1 view .LVU60
 295 0010 04F01F00 		and	r0, r4, #31
 296 0014 FFF7FEFF 		bl	nRF24_LL_RW
 297              	.LVL36:
  33:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 298              		.loc 1 33 2 view .LVU61
  33:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 299              		.loc 1 33 10 is_stmt 0 view .LVU62
 300 0018 FF20     		movs	r0, #255
 301 001a FFF7FEFF 		bl	nRF24_LL_RW
 302              	.LVL37:
 303 001e 0446     		mov	r4, r0
 304              	.LVL38:
  34:Drivers/BSP/nrf24l01/nrf24.c **** 
 305              		.loc 1 34 2 is_stmt 1 view .LVU63
 306 0020 0122     		movs	r2, #1
 307 0022 1021     		movs	r1, #16
 308 0024 2846     		mov	r0, r5
 309 0026 FFF7FEFF 		bl	HW_GPIO_Write
 310              	.LVL39:
  36:Drivers/BSP/nrf24l01/nrf24.c **** }
 311              		.loc 1 36 2 view .LVU64
  37:Drivers/BSP/nrf24l01/nrf24.c **** 
 312              		.loc 1 37 1 is_stmt 0 view .LVU65
 313 002a 2046     		mov	r0, r4
 314 002c 38BD     		pop	{r3, r4, r5, pc}
 315              	.LVL40:
 316              	.L24:
  37:Drivers/BSP/nrf24l01/nrf24.c **** 
 317              		.loc 1 37 1 view .LVU66
 318 002e 00BF     		.align	2
 319              	.L23:
 320 0030 00080140 		.word	1073809408
 321              		.cfi_endproc
 322              	.LFE111:
 324              		.section	.rodata.nRF24_Check.str1.4,"aMS",%progbits,1
 325              		.align	2
 326              	.LC0:
 327 0000 6E524632 		.ascii	"nRF24\000"
 327      3400
 328              		.section	.text.nRF24_Check,"ax",%progbits
 329              		.align	1
 330              		.global	nRF24_Check
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	nRF24_Check:
 337              	.LFB116:
  86:Drivers/BSP/nrf24l01/nrf24.c **** 
  87:Drivers/BSP/nrf24l01/nrf24.c **** // Configures the transceiver to its initial state
  88:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_Init(void) {
  89:Drivers/BSP/nrf24l01/nrf24.c **** 	// Write to the registers their initial values
  90:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_CONFIG,     0x08);
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 9


  91:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_AA,      0x3F);
  92:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_RXADDR,  0x03);
  93:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_SETUP_AW,   0x03);
  94:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_SETUP_RETR, 0x03);
  95:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_CH,      0x02);
  96:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_SETUP,   0x0E);
  97:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_STATUS,     0x00);
  98:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P0,   0x00);
  99:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P1,   0x00);
 100:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P2,   0x00);
 101:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P3,   0x00);
 102:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P4,   0x00);
 103:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P5,   0x00);
 104:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_DYNPD,      0x00);
 105:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_FEATURE,    0x00);
 106:Drivers/BSP/nrf24l01/nrf24.c **** 
 107:Drivers/BSP/nrf24l01/nrf24.c **** 	// Configure the default RX/TX address values
 108:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t addr[5];
 109:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t idx;
 110:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 0U; idx < sizeof(addr); idx++) {
 111:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 112:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 113:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_SetAddr(nRF24_PIPETX, addr);
 114:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_SetAddr(nRF24_PIPE0, addr);
 115:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 0U; idx < sizeof(addr); idx++) {
 116:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 117:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 118:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_SetAddr(nRF24_PIPE1, addr);
 119:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 2U; idx < 6U; idx++) {
 120:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 121:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_SetAddr(idx, addr);
 122:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 123:Drivers/BSP/nrf24l01/nrf24.c **** 
 124:Drivers/BSP/nrf24l01/nrf24.c **** 	// Clear the FIFO's
 125:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_FlushRX();
 126:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_FlushTX();
 127:Drivers/BSP/nrf24l01/nrf24.c **** 
 128:Drivers/BSP/nrf24l01/nrf24.c **** 	// Clear any pending interrupt flags
 129:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_ClearIRQFlags();
 130:Drivers/BSP/nrf24l01/nrf24.c **** 
 131:Drivers/BSP/nrf24l01/nrf24.c **** 	// Deassert CSN pin (chip release)
 132:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_CSN_H;
 133:Drivers/BSP/nrf24l01/nrf24.c **** }
 134:Drivers/BSP/nrf24l01/nrf24.c **** 
 135:Drivers/BSP/nrf24l01/nrf24.c **** // Checks the presence of the nRF24L01
 136:Drivers/BSP/nrf24l01/nrf24.c **** // return:
 137:Drivers/BSP/nrf24l01/nrf24.c **** //   zero - transceiver is absent
 138:Drivers/BSP/nrf24l01/nrf24.c **** //   non-zero: transceiver is present
 139:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_Check(void) {
 338              		.loc 1 139 27 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 10B5     		push	{r4, lr}
 343              	.LCFI4:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 4, -8
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 10


 346              		.cfi_offset 14, -4
 347 0002 82B0     		sub	sp, sp, #8
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 16
 140:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t rxbuf[sizeof(nRF24_TEST_ADDR) - 1U];
 350              		.loc 1 140 2 view .LVU68
 141:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t *ptr = (uint8_t *)nRF24_TEST_ADDR;
 351              		.loc 1 141 2 view .LVU69
 352              	.LVL41:
 142:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t idx;
 353              		.loc 1 142 2 view .LVU70
 143:Drivers/BSP/nrf24l01/nrf24.c **** 
 144:Drivers/BSP/nrf24l01/nrf24.c **** 	// Write the test address to the TX_ADDR register
 145:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteMBReg(
 354              		.loc 1 145 2 view .LVU71
 355 0004 0F4C     		ldr	r4, .L32
 356 0006 0522     		movs	r2, #5
 357 0008 2146     		mov	r1, r4
 358 000a 3020     		movs	r0, #48
 359 000c FFF7FEFF 		bl	nRF24_WriteMBReg
 360              	.LVL42:
 146:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_CMD_W_REGISTER | nRF24_REG_TX_ADDR,
 147:Drivers/BSP/nrf24l01/nrf24.c **** 		ptr,
 148:Drivers/BSP/nrf24l01/nrf24.c **** 		sizeof(nRF24_TEST_ADDR) - 1U
 149:Drivers/BSP/nrf24l01/nrf24.c **** 	);
 150:Drivers/BSP/nrf24l01/nrf24.c **** 
 151:Drivers/BSP/nrf24l01/nrf24.c **** 	// Read it back to the buffer
 152:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_ReadMBReg(
 361              		.loc 1 152 2 view .LVU72
 362 0010 0522     		movs	r2, #5
 363 0012 6946     		mov	r1, sp
 364 0014 1020     		movs	r0, #16
 365 0016 FFF7FEFF 		bl	nRF24_ReadMBReg
 366              	.LVL43:
 153:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_CMD_R_REGISTER | nRF24_REG_TX_ADDR,
 154:Drivers/BSP/nrf24l01/nrf24.c **** 		rxbuf,
 155:Drivers/BSP/nrf24l01/nrf24.c **** 		sizeof(nRF24_TEST_ADDR) - 1U
 156:Drivers/BSP/nrf24l01/nrf24.c **** 	);
 157:Drivers/BSP/nrf24l01/nrf24.c **** 
 158:Drivers/BSP/nrf24l01/nrf24.c **** 	// Compare transmitted and received data...
 159:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 0U; idx < sizeof(nRF24_TEST_ADDR) - 1U; idx++) {
 367              		.loc 1 159 2 view .LVU73
 368              		.loc 1 159 11 is_stmt 0 view .LVU74
 369 001a 0023     		movs	r3, #0
 141:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t idx;
 370              		.loc 1 141 11 view .LVU75
 371 001c 2146     		mov	r1, r4
 372              	.LVL44:
 373              	.L26:
 374              		.loc 1 159 17 is_stmt 1 discriminator 1 view .LVU76
 375              		.loc 1 159 2 is_stmt 0 discriminator 1 view .LVU77
 376 001e 042B     		cmp	r3, #4
 377 0020 0AD8     		bhi	.L31
 160:Drivers/BSP/nrf24l01/nrf24.c **** 		if (rxbuf[idx] != *ptr++) {
 378              		.loc 1 160 3 is_stmt 1 view .LVU78
 379              		.loc 1 160 12 is_stmt 0 view .LVU79
 380 0022 02AA     		add	r2, sp, #8
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 11


 381 0024 1A44     		add	r2, r2, r3
 382 0026 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 383              	.LVL45:
 384              		.loc 1 160 21 view .LVU80
 385 002a 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 386              	.LVL46:
 387              		.loc 1 160 6 view .LVU81
 388 002e 9042     		cmp	r0, r2
 389 0030 05D1     		bne	.L29
 159:Drivers/BSP/nrf24l01/nrf24.c **** 		if (rxbuf[idx] != *ptr++) {
 390              		.loc 1 159 53 is_stmt 1 discriminator 2 view .LVU82
 159:Drivers/BSP/nrf24l01/nrf24.c **** 		if (rxbuf[idx] != *ptr++) {
 391              		.loc 1 159 56 is_stmt 0 discriminator 2 view .LVU83
 392 0032 0133     		adds	r3, r3, #1
 393              	.LVL47:
 159:Drivers/BSP/nrf24l01/nrf24.c **** 		if (rxbuf[idx] != *ptr++) {
 394              		.loc 1 159 56 discriminator 2 view .LVU84
 395 0034 DBB2     		uxtb	r3, r3
 396              	.LVL48:
 159:Drivers/BSP/nrf24l01/nrf24.c **** 		if (rxbuf[idx] != *ptr++) {
 397              		.loc 1 159 56 discriminator 2 view .LVU85
 398 0036 F2E7     		b	.L26
 399              	.L31:
 161:Drivers/BSP/nrf24l01/nrf24.c **** 			// The transceiver is absent
 162:Drivers/BSP/nrf24l01/nrf24.c **** 			return 0U;
 163:Drivers/BSP/nrf24l01/nrf24.c **** 		}
 164:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 165:Drivers/BSP/nrf24l01/nrf24.c **** 
 166:Drivers/BSP/nrf24l01/nrf24.c **** 	// The transceiver is present
 167:Drivers/BSP/nrf24l01/nrf24.c **** 	return !0U;
 400              		.loc 1 167 9 view .LVU86
 401 0038 0120     		movs	r0, #1
 402              	.L27:
 168:Drivers/BSP/nrf24l01/nrf24.c **** }
 403              		.loc 1 168 1 view .LVU87
 404 003a 02B0     		add	sp, sp, #8
 405              	.LCFI6:
 406              		.cfi_remember_state
 407              		.cfi_def_cfa_offset 8
 408              		@ sp needed
 409 003c 10BD     		pop	{r4, pc}
 410              	.L29:
 411              	.LCFI7:
 412              		.cfi_restore_state
 162:Drivers/BSP/nrf24l01/nrf24.c **** 		}
 413              		.loc 1 162 11 view .LVU88
 414 003e 0020     		movs	r0, #0
 415 0040 FBE7     		b	.L27
 416              	.L33:
 417 0042 00BF     		.align	2
 418              	.L32:
 419 0044 00000000 		.word	.LC0
 420              		.cfi_endproc
 421              	.LFE116:
 423              		.section	.text.nRF24_SetPowerMode,"ax",%progbits
 424              		.align	1
 425              		.global	nRF24_SetPowerMode
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 12


 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 429              		.fpu softvfp
 431              	nRF24_SetPowerMode:
 432              	.LVL49:
 433              	.LFB117:
 169:Drivers/BSP/nrf24l01/nrf24.c **** 
 170:Drivers/BSP/nrf24l01/nrf24.c **** // Set transceiver power mode
 171:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 172:Drivers/BSP/nrf24l01/nrf24.c **** //   mode - new state of power mode, one of nRF24_PWR_xx values
 173:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetPowerMode(uint8_t mode) {
 434              		.loc 1 173 39 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		.loc 1 173 39 is_stmt 0 view .LVU90
 439 0000 10B5     		push	{r4, lr}
 440              	.LCFI8:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 4, -8
 443              		.cfi_offset 14, -4
 444 0002 0446     		mov	r4, r0
 174:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 445              		.loc 1 174 2 is_stmt 1 view .LVU91
 175:Drivers/BSP/nrf24l01/nrf24.c **** 
 176:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_CONFIG);
 446              		.loc 1 176 2 view .LVU92
 447              		.loc 1 176 8 is_stmt 0 view .LVU93
 448 0004 0020     		movs	r0, #0
 449              	.LVL50:
 450              		.loc 1 176 8 view .LVU94
 451 0006 FFF7FEFF 		bl	nRF24_ReadReg
 452              	.LVL51:
 177:Drivers/BSP/nrf24l01/nrf24.c **** 	if (mode == nRF24_PWR_UP) {
 453              		.loc 1 177 2 is_stmt 1 view .LVU95
 454              		.loc 1 177 5 is_stmt 0 view .LVU96
 455 000a 022C     		cmp	r4, #2
 456 000c 05D0     		beq	.L38
 178:Drivers/BSP/nrf24l01/nrf24.c **** 		// Set the PWR_UP bit of CONFIG register to wake the transceiver
 179:Drivers/BSP/nrf24l01/nrf24.c **** 		// It goes into Standby-I mode with consumption about 26uA
 180:Drivers/BSP/nrf24l01/nrf24.c **** 		reg |= nRF24_CONFIG_PWR_UP;
 181:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
 182:Drivers/BSP/nrf24l01/nrf24.c **** 		// Clear the PWR_UP bit of CONFIG register to put the transceiver
 183:Drivers/BSP/nrf24l01/nrf24.c **** 		// It goes into Power Down mode with consumption about 900nA
 184:Drivers/BSP/nrf24l01/nrf24.c **** 		reg &= ~nRF24_CONFIG_PWR_UP;
 457              		.loc 1 184 3 is_stmt 1 view .LVU97
 458              		.loc 1 184 7 is_stmt 0 view .LVU98
 459 000e 00F0FD01 		and	r1, r0, #253
 460              	.LVL52:
 461              	.L36:
 185:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 186:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_CONFIG, reg);
 462              		.loc 1 186 2 is_stmt 1 view .LVU99
 463 0012 0020     		movs	r0, #0
 464 0014 FFF7FEFF 		bl	nRF24_WriteReg
 465              	.LVL53:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 13


 187:Drivers/BSP/nrf24l01/nrf24.c **** }
 466              		.loc 1 187 1 is_stmt 0 view .LVU100
 467 0018 10BD     		pop	{r4, pc}
 468              	.LVL54:
 469              	.L38:
 180:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
 470              		.loc 1 180 3 is_stmt 1 view .LVU101
 180:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
 471              		.loc 1 180 7 is_stmt 0 view .LVU102
 472 001a 40F00201 		orr	r1, r0, #2
 473 001e C9B2     		uxtb	r1, r1
 474              	.LVL55:
 180:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
 475              		.loc 1 180 7 view .LVU103
 476 0020 F7E7     		b	.L36
 477              		.cfi_endproc
 478              	.LFE117:
 480              		.section	.text.nRF24_SetOperationalMode,"ax",%progbits
 481              		.align	1
 482              		.global	nRF24_SetOperationalMode
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 486              		.fpu softvfp
 488              	nRF24_SetOperationalMode:
 489              	.LVL56:
 490              	.LFB118:
 188:Drivers/BSP/nrf24l01/nrf24.c **** 
 189:Drivers/BSP/nrf24l01/nrf24.c **** // Set transceiver operational mode
 190:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 191:Drivers/BSP/nrf24l01/nrf24.c **** //   mode - operational mode, one of nRF24_MODE_xx values
 192:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetOperationalMode(uint8_t mode) {
 491              		.loc 1 192 45 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 192 45 is_stmt 0 view .LVU105
 496 0000 10B5     		push	{r4, lr}
 497              	.LCFI9:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 4, -8
 500              		.cfi_offset 14, -4
 501 0002 0446     		mov	r4, r0
 193:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 502              		.loc 1 193 2 is_stmt 1 view .LVU106
 194:Drivers/BSP/nrf24l01/nrf24.c **** 
 195:Drivers/BSP/nrf24l01/nrf24.c **** 	// Configure PRIM_RX bit of the CONFIG register
 196:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_CONFIG);
 503              		.loc 1 196 2 view .LVU107
 504              		.loc 1 196 8 is_stmt 0 view .LVU108
 505 0004 0020     		movs	r0, #0
 506              	.LVL57:
 507              		.loc 1 196 8 view .LVU109
 508 0006 FFF7FEFF 		bl	nRF24_ReadReg
 509              	.LVL58:
 197:Drivers/BSP/nrf24l01/nrf24.c **** 	reg &= ~nRF24_CONFIG_PRIM_RX;
 510              		.loc 1 197 2 is_stmt 1 view .LVU110
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 14


 511              		.loc 1 197 6 is_stmt 0 view .LVU111
 512 000a 00F0FE01 		and	r1, r0, #254
 513              	.LVL59:
 198:Drivers/BSP/nrf24l01/nrf24.c **** 	reg |= (mode & nRF24_CONFIG_PRIM_RX);
 514              		.loc 1 198 2 is_stmt 1 view .LVU112
 515              		.loc 1 198 15 is_stmt 0 view .LVU113
 516 000e 04F00104 		and	r4, r4, #1
 517              	.LVL60:
 199:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_CONFIG, reg);
 518              		.loc 1 199 2 is_stmt 1 view .LVU114
 519 0012 2143     		orrs	r1, r1, r4
 520              	.LVL61:
 521              		.loc 1 199 2 is_stmt 0 view .LVU115
 522 0014 0020     		movs	r0, #0
 523 0016 FFF7FEFF 		bl	nRF24_WriteReg
 524              	.LVL62:
 200:Drivers/BSP/nrf24l01/nrf24.c **** }
 525              		.loc 1 200 1 view .LVU116
 526 001a 10BD     		pop	{r4, pc}
 527              		.loc 1 200 1 view .LVU117
 528              		.cfi_endproc
 529              	.LFE118:
 531              		.section	.text.nRF24_SetCRCScheme,"ax",%progbits
 532              		.align	1
 533              		.global	nRF24_SetCRCScheme
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	nRF24_SetCRCScheme:
 540              	.LVL63:
 541              	.LFB119:
 201:Drivers/BSP/nrf24l01/nrf24.c **** 
 202:Drivers/BSP/nrf24l01/nrf24.c **** // Configure transceiver CRC scheme
 203:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 204:Drivers/BSP/nrf24l01/nrf24.c **** //   scheme - CRC scheme, one of nRF24_CRC_xx values
 205:Drivers/BSP/nrf24l01/nrf24.c **** // note: transceiver will forcibly turn on the CRC in case if auto acknowledgment
 206:Drivers/BSP/nrf24l01/nrf24.c **** //       enabled for at least one RX pipe
 207:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetCRCScheme(uint8_t scheme) {
 542              		.loc 1 207 41 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		.loc 1 207 41 is_stmt 0 view .LVU119
 547 0000 10B5     		push	{r4, lr}
 548              	.LCFI10:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552 0002 0446     		mov	r4, r0
 208:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 553              		.loc 1 208 2 is_stmt 1 view .LVU120
 209:Drivers/BSP/nrf24l01/nrf24.c **** 
 210:Drivers/BSP/nrf24l01/nrf24.c **** 	// Configure EN_CRC[3] and CRCO[2] bits of the CONFIG register
 211:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_CONFIG);
 554              		.loc 1 211 2 view .LVU121
 555              		.loc 1 211 8 is_stmt 0 view .LVU122
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 15


 556 0004 0020     		movs	r0, #0
 557              	.LVL64:
 558              		.loc 1 211 8 view .LVU123
 559 0006 FFF7FEFF 		bl	nRF24_ReadReg
 560              	.LVL65:
 212:Drivers/BSP/nrf24l01/nrf24.c **** 	reg &= ~nRF24_MASK_CRC;
 561              		.loc 1 212 2 is_stmt 1 view .LVU124
 562              		.loc 1 212 6 is_stmt 0 view .LVU125
 563 000a 00F0F301 		and	r1, r0, #243
 564              	.LVL66:
 213:Drivers/BSP/nrf24l01/nrf24.c **** 	reg |= (scheme & nRF24_MASK_CRC);
 565              		.loc 1 213 2 is_stmt 1 view .LVU126
 566              		.loc 1 213 17 is_stmt 0 view .LVU127
 567 000e 04F00C04 		and	r4, r4, #12
 568              	.LVL67:
 214:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_CONFIG, reg);
 569              		.loc 1 214 2 is_stmt 1 view .LVU128
 570 0012 2143     		orrs	r1, r1, r4
 571              	.LVL68:
 572              		.loc 1 214 2 is_stmt 0 view .LVU129
 573 0014 0020     		movs	r0, #0
 574 0016 FFF7FEFF 		bl	nRF24_WriteReg
 575              	.LVL69:
 215:Drivers/BSP/nrf24l01/nrf24.c **** }
 576              		.loc 1 215 1 view .LVU130
 577 001a 10BD     		pop	{r4, pc}
 578              		.loc 1 215 1 view .LVU131
 579              		.cfi_endproc
 580              	.LFE119:
 582              		.section	.text.nRF24_SetRFChannel,"ax",%progbits
 583              		.align	1
 584              		.global	nRF24_SetRFChannel
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu softvfp
 590              	nRF24_SetRFChannel:
 591              	.LVL70:
 592              	.LFB120:
 216:Drivers/BSP/nrf24l01/nrf24.c **** 
 217:Drivers/BSP/nrf24l01/nrf24.c **** // Set RF frequency channel
 218:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 219:Drivers/BSP/nrf24l01/nrf24.c **** //   channel - radio frequency channel, can be a value from 0 to 127
 220:Drivers/BSP/nrf24l01/nrf24.c **** // note: frequency will be (2400 + channel)MHz
 221:Drivers/BSP/nrf24l01/nrf24.c **** // note: PLOS_CNT[7:4] bits of the OBSERVER_TX register will be reset
 222:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetRFChannel(uint8_t channel) {
 593              		.loc 1 222 42 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		.loc 1 222 42 is_stmt 0 view .LVU133
 598 0000 08B5     		push	{r3, lr}
 599              	.LCFI11:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 3, -8
 602              		.cfi_offset 14, -4
 603 0002 0146     		mov	r1, r0
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 16


 223:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_CH, channel);
 604              		.loc 1 223 2 is_stmt 1 view .LVU134
 605 0004 0520     		movs	r0, #5
 606              	.LVL71:
 607              		.loc 1 223 2 is_stmt 0 view .LVU135
 608 0006 FFF7FEFF 		bl	nRF24_WriteReg
 609              	.LVL72:
 224:Drivers/BSP/nrf24l01/nrf24.c **** }
 610              		.loc 1 224 1 view .LVU136
 611 000a 08BD     		pop	{r3, pc}
 612              		.cfi_endproc
 613              	.LFE120:
 615              		.section	.text.nRF24_SetAutoRetr,"ax",%progbits
 616              		.align	1
 617              		.global	nRF24_SetAutoRetr
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu softvfp
 623              	nRF24_SetAutoRetr:
 624              	.LVL73:
 625              	.LFB121:
 225:Drivers/BSP/nrf24l01/nrf24.c **** 
 226:Drivers/BSP/nrf24l01/nrf24.c **** // Set automatic retransmission parameters
 227:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 228:Drivers/BSP/nrf24l01/nrf24.c **** //   ard - auto retransmit delay, one of nRF24_ARD_xx values
 229:Drivers/BSP/nrf24l01/nrf24.c **** //   arc - count of auto retransmits, value form 0 to 15
 230:Drivers/BSP/nrf24l01/nrf24.c **** // note: in order to disable automatic retransmission,
 231:Drivers/BSP/nrf24l01/nrf24.c **** //       the value of the variable XXX should be zero
 232:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetAutoRetr(uint8_t ard, uint8_t arc) {
 626              		.loc 1 232 50 is_stmt 1 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		.loc 1 232 50 is_stmt 0 view .LVU138
 631 0000 08B5     		push	{r3, lr}
 632              	.LCFI12:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 3, -8
 635              		.cfi_offset 14, -4
 233:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(
 636              		.loc 1 233 2 is_stmt 1 view .LVU139
 234:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_REG_SETUP_RETR,
 235:Drivers/BSP/nrf24l01/nrf24.c **** 		(uint8_t)((ard << 4) | (arc & nRF24_MASK_RETR_ARC))
 637              		.loc 1 235 31 is_stmt 0 view .LVU140
 638 0002 01F00F01 		and	r1, r1, #15
 639              	.LVL74:
 640              		.loc 1 235 24 view .LVU141
 641 0006 41EA0011 		orr	r1, r1, r0, lsl #4
 233:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(
 642              		.loc 1 233 2 view .LVU142
 643 000a C9B2     		uxtb	r1, r1
 644 000c 0420     		movs	r0, #4
 645              	.LVL75:
 233:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(
 646              		.loc 1 233 2 view .LVU143
 647 000e FFF7FEFF 		bl	nRF24_WriteReg
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 17


 648              	.LVL76:
 236:Drivers/BSP/nrf24l01/nrf24.c **** 	);
 237:Drivers/BSP/nrf24l01/nrf24.c **** }
 649              		.loc 1 237 1 view .LVU144
 650 0012 08BD     		pop	{r3, pc}
 651              		.cfi_endproc
 652              	.LFE121:
 654              		.section	.text.nRF24_SetAddrWidth,"ax",%progbits
 655              		.align	1
 656              		.global	nRF24_SetAddrWidth
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 660              		.fpu softvfp
 662              	nRF24_SetAddrWidth:
 663              	.LVL77:
 664              	.LFB122:
 238:Drivers/BSP/nrf24l01/nrf24.c **** 
 239:Drivers/BSP/nrf24l01/nrf24.c **** // Set of address widths
 240:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 241:Drivers/BSP/nrf24l01/nrf24.c **** //   addr_width - RX/TX address field width, value from 3 to 5
 242:Drivers/BSP/nrf24l01/nrf24.c **** // note: this setting is common for all pipes
 243:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetAddrWidth(uint8_t addr_width) {
 665              		.loc 1 243 45 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		.loc 1 243 45 is_stmt 0 view .LVU146
 670 0000 08B5     		push	{r3, lr}
 671              	.LCFI13:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 244:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_SETUP_AW, addr_width - 2U);
 675              		.loc 1 244 2 is_stmt 1 view .LVU147
 676 0002 811E     		subs	r1, r0, #2
 677 0004 C9B2     		uxtb	r1, r1
 678 0006 0320     		movs	r0, #3
 679              	.LVL78:
 680              		.loc 1 244 2 is_stmt 0 view .LVU148
 681 0008 FFF7FEFF 		bl	nRF24_WriteReg
 682              	.LVL79:
 245:Drivers/BSP/nrf24l01/nrf24.c **** }
 683              		.loc 1 245 1 view .LVU149
 684 000c 08BD     		pop	{r3, pc}
 685              		.cfi_endproc
 686              	.LFE122:
 688              		.section	.text.nRF24_SetTXPower,"ax",%progbits
 689              		.align	1
 690              		.global	nRF24_SetTXPower
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu softvfp
 696              	nRF24_SetTXPower:
 697              	.LVL80:
 698              	.LFB124:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 18


 246:Drivers/BSP/nrf24l01/nrf24.c **** 
 247:Drivers/BSP/nrf24l01/nrf24.c **** // Set static RX address for a specified pipe
 248:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 249:Drivers/BSP/nrf24l01/nrf24.c **** //   pipe - pipe to configure address, one of nRF24_PIPEx values
 250:Drivers/BSP/nrf24l01/nrf24.c **** //   addr - pointer to the buffer with address
 251:Drivers/BSP/nrf24l01/nrf24.c **** // note: pipe can be a number from 0 to 5 (RX pipes) and 6 (TX pipe)
 252:Drivers/BSP/nrf24l01/nrf24.c **** // note: the length of the buffer for pipes 0 and 1 must not be less
 253:Drivers/BSP/nrf24l01/nrf24.c **** //       of the actual address width configured in the transceiver
 254:Drivers/BSP/nrf24l01/nrf24.c **** // note: for the pipes[2..5] only the first byte from the addr buffer
 255:Drivers/BSP/nrf24l01/nrf24.c **** //       will be written since the pipes[1..5] share the four
 256:Drivers/BSP/nrf24l01/nrf24.c **** //       most significant address bytes
 257:Drivers/BSP/nrf24l01/nrf24.c **** // note: always ensure that none of the data pipes have the same address
 258:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetAddr(uint8_t pipe, const uint8_t *addr) {
 259:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t addr_width;
 260:Drivers/BSP/nrf24l01/nrf24.c **** 
 261:Drivers/BSP/nrf24l01/nrf24.c **** 	// RX_ADDR_Px register
 262:Drivers/BSP/nrf24l01/nrf24.c **** 	switch (pipe) {
 263:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPETX:
 264:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE0:
 265:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE1:
 266:Drivers/BSP/nrf24l01/nrf24.c **** 			// Get address width
 267:Drivers/BSP/nrf24l01/nrf24.c **** 			addr_width = nRF24_GetAddrWidth();
 268:Drivers/BSP/nrf24l01/nrf24.c **** #if (!nRF24_ADDR_REVERSE)
 269:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_WriteMBReg(
 270:Drivers/BSP/nrf24l01/nrf24.c **** 				nRF24_CMD_W_REGISTER | nRF24_ADDR_REGS[pipe],
 271:Drivers/BSP/nrf24l01/nrf24.c **** 				(uint8_t *)addr,
 272:Drivers/BSP/nrf24l01/nrf24.c **** 				addr_width
 273:Drivers/BSP/nrf24l01/nrf24.c **** 			);
 274:Drivers/BSP/nrf24l01/nrf24.c **** #else
 275:Drivers/BSP/nrf24l01/nrf24.c **** 			// Write address in reverse order
 276:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_CSN_L;
 277:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_LL_RW(nRF24_CMD_W_REGISTER | nRF24_ADDR_REGS[pipe]);
 278:Drivers/BSP/nrf24l01/nrf24.c **** 			while (addr_width--) { nRF24_LL_RW(*(addr + addr_width)); }
 279:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_CSN_H;
 280:Drivers/BSP/nrf24l01/nrf24.c **** #endif // nRF24_ADDR_REVERSE
 281:Drivers/BSP/nrf24l01/nrf24.c **** 			break;
 282:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE2:
 283:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE3:
 284:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE4:
 285:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE5:
 286:Drivers/BSP/nrf24l01/nrf24.c **** 			// Write first byte from the addr buffer,
 287:Drivers/BSP/nrf24l01/nrf24.c **** 			// it will be the LSByte of the pipe address
 288:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_WriteReg(nRF24_ADDR_REGS[pipe], *addr);
 289:Drivers/BSP/nrf24l01/nrf24.c **** 			break;
 290:Drivers/BSP/nrf24l01/nrf24.c **** 		default:
 291:Drivers/BSP/nrf24l01/nrf24.c **** 			// Incorrect pipe number -> do nothing
 292:Drivers/BSP/nrf24l01/nrf24.c **** 			break;
 293:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 294:Drivers/BSP/nrf24l01/nrf24.c **** }
 295:Drivers/BSP/nrf24l01/nrf24.c **** 
 296:Drivers/BSP/nrf24l01/nrf24.c **** // Configure RF output power in TX mode
 297:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 298:Drivers/BSP/nrf24l01/nrf24.c **** //   tx_pwr - RF output power, one of nRF24_TXPWR_xx values
 299:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetTXPower(uint8_t tx_pwr) {
 699              		.loc 1 299 39 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 19


 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		.loc 1 299 39 is_stmt 0 view .LVU151
 704 0000 10B5     		push	{r4, lr}
 705              	.LCFI14:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 4, -8
 708              		.cfi_offset 14, -4
 709 0002 0446     		mov	r4, r0
 300:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 710              		.loc 1 300 2 is_stmt 1 view .LVU152
 301:Drivers/BSP/nrf24l01/nrf24.c **** 
 302:Drivers/BSP/nrf24l01/nrf24.c **** 	// Configure RF_PWR[2:1] bits of the RF_SETUP register
 303:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_RF_SETUP);
 711              		.loc 1 303 2 view .LVU153
 712              		.loc 1 303 8 is_stmt 0 view .LVU154
 713 0004 0620     		movs	r0, #6
 714              	.LVL81:
 715              		.loc 1 303 8 view .LVU155
 716 0006 FFF7FEFF 		bl	nRF24_ReadReg
 717              	.LVL82:
 304:Drivers/BSP/nrf24l01/nrf24.c **** 	reg &= ~nRF24_MASK_RF_PWR;
 718              		.loc 1 304 2 is_stmt 1 view .LVU156
 719              		.loc 1 304 6 is_stmt 0 view .LVU157
 720 000a 00F0F901 		and	r1, r0, #249
 721              	.LVL83:
 305:Drivers/BSP/nrf24l01/nrf24.c **** 	reg |= tx_pwr;
 722              		.loc 1 305 2 is_stmt 1 view .LVU158
 306:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_SETUP, reg);
 723              		.loc 1 306 2 view .LVU159
 724 000e 2143     		orrs	r1, r1, r4
 725              	.LVL84:
 726              		.loc 1 306 2 is_stmt 0 view .LVU160
 727 0010 0620     		movs	r0, #6
 728 0012 FFF7FEFF 		bl	nRF24_WriteReg
 729              	.LVL85:
 307:Drivers/BSP/nrf24l01/nrf24.c **** }
 730              		.loc 1 307 1 view .LVU161
 731 0016 10BD     		pop	{r4, pc}
 732              		.cfi_endproc
 733              	.LFE124:
 735              		.section	.text.nRF24_SetDataRate,"ax",%progbits
 736              		.align	1
 737              		.global	nRF24_SetDataRate
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu softvfp
 743              	nRF24_SetDataRate:
 744              	.LVL86:
 745              	.LFB125:
 308:Drivers/BSP/nrf24l01/nrf24.c **** 
 309:Drivers/BSP/nrf24l01/nrf24.c **** // Configure transceiver data rate
 310:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 311:Drivers/BSP/nrf24l01/nrf24.c **** //   data_rate - data rate, one of nRF24_DR_xx values
 312:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetDataRate(uint8_t data_rate) {
 746              		.loc 1 312 43 is_stmt 1 view -0
 747              		.cfi_startproc
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 20


 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		.loc 1 312 43 is_stmt 0 view .LVU163
 751 0000 10B5     		push	{r4, lr}
 752              	.LCFI15:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 4, -8
 755              		.cfi_offset 14, -4
 756 0002 0446     		mov	r4, r0
 313:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 757              		.loc 1 313 2 is_stmt 1 view .LVU164
 314:Drivers/BSP/nrf24l01/nrf24.c **** 
 315:Drivers/BSP/nrf24l01/nrf24.c **** 	// Configure RF_DR_LOW[5] and RF_DR_HIGH[3] bits of the RF_SETUP register
 316:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_RF_SETUP);
 758              		.loc 1 316 2 view .LVU165
 759              		.loc 1 316 8 is_stmt 0 view .LVU166
 760 0004 0620     		movs	r0, #6
 761              	.LVL87:
 762              		.loc 1 316 8 view .LVU167
 763 0006 FFF7FEFF 		bl	nRF24_ReadReg
 764              	.LVL88:
 317:Drivers/BSP/nrf24l01/nrf24.c **** 	reg &= ~nRF24_MASK_DATARATE;
 765              		.loc 1 317 2 is_stmt 1 view .LVU168
 766              		.loc 1 317 6 is_stmt 0 view .LVU169
 767 000a 00F0D701 		and	r1, r0, #215
 768              	.LVL89:
 318:Drivers/BSP/nrf24l01/nrf24.c **** 	reg |= data_rate;
 769              		.loc 1 318 2 is_stmt 1 view .LVU170
 319:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_SETUP, reg);
 770              		.loc 1 319 2 view .LVU171
 771 000e 2143     		orrs	r1, r1, r4
 772              	.LVL90:
 773              		.loc 1 319 2 is_stmt 0 view .LVU172
 774 0010 0620     		movs	r0, #6
 775 0012 FFF7FEFF 		bl	nRF24_WriteReg
 776              	.LVL91:
 320:Drivers/BSP/nrf24l01/nrf24.c **** }
 777              		.loc 1 320 1 view .LVU173
 778 0016 10BD     		pop	{r4, pc}
 779              		.cfi_endproc
 780              	.LFE125:
 782              		.section	.text.nRF24_SetRXPipe,"ax",%progbits
 783              		.align	1
 784              		.global	nRF24_SetRXPipe
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu softvfp
 790              	nRF24_SetRXPipe:
 791              	.LVL92:
 792              	.LFB126:
 321:Drivers/BSP/nrf24l01/nrf24.c **** 
 322:Drivers/BSP/nrf24l01/nrf24.c **** // Configure a specified RX pipe
 323:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 324:Drivers/BSP/nrf24l01/nrf24.c **** //   pipe - number of the RX pipe, value from 0 to 5
 325:Drivers/BSP/nrf24l01/nrf24.c **** //   aa_state - state of auto acknowledgment, one of nRF24_AA_xx values
 326:Drivers/BSP/nrf24l01/nrf24.c **** //   payload_len - payload length in bytes
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 21


 327:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_SetRXPipe(uint8_t pipe, uint8_t aa_state, uint8_t payload_len) {
 793              		.loc 1 327 75 is_stmt 1 view -0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		.loc 1 327 75 is_stmt 0 view .LVU175
 798 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 799              	.LCFI16:
 800              		.cfi_def_cfa_offset 24
 801              		.cfi_offset 4, -24
 802              		.cfi_offset 5, -20
 803              		.cfi_offset 6, -16
 804              		.cfi_offset 7, -12
 805              		.cfi_offset 8, -8
 806              		.cfi_offset 14, -4
 807 0004 0446     		mov	r4, r0
 808 0006 0E46     		mov	r6, r1
 809 0008 1746     		mov	r7, r2
 328:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 810              		.loc 1 328 2 is_stmt 1 view .LVU176
 329:Drivers/BSP/nrf24l01/nrf24.c **** 
 330:Drivers/BSP/nrf24l01/nrf24.c **** 	// Enable the specified pipe (EN_RXADDR register)
 331:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = (nRF24_ReadReg(nRF24_REG_EN_RXADDR) | (1U << pipe)) & nRF24_MASK_EN_RX;
 811              		.loc 1 331 2 view .LVU177
 812              		.loc 1 331 9 is_stmt 0 view .LVU178
 813 000a 0220     		movs	r0, #2
 814              	.LVL93:
 815              		.loc 1 331 9 view .LVU179
 816 000c FFF7FEFF 		bl	nRF24_ReadReg
 817              	.LVL94:
 818              		.loc 1 331 50 view .LVU180
 819 0010 4FF00108 		mov	r8, #1
 820 0014 08FA04F1 		lsl	r1, r8, r4
 821              		.loc 1 331 44 view .LVU181
 822 0018 CDB2     		uxtb	r5, r1
 823 001a 40EA0501 		orr	r1, r0, r5
 824              	.LVL95:
 332:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_RXADDR, reg);
 825              		.loc 1 332 2 is_stmt 1 view .LVU182
 826 001e 01F03F01 		and	r1, r1, #63
 827              	.LVL96:
 828              		.loc 1 332 2 is_stmt 0 view .LVU183
 829 0022 0220     		movs	r0, #2
 830              	.LVL97:
 831              		.loc 1 332 2 view .LVU184
 832 0024 FFF7FEFF 		bl	nRF24_WriteReg
 833              	.LVL98:
 333:Drivers/BSP/nrf24l01/nrf24.c **** 
 334:Drivers/BSP/nrf24l01/nrf24.c **** 	// Set RX payload length (RX_PW_Px register)
 335:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P0 + pipe, payload_len & nRF24_MASK_RX_PW);
 834              		.loc 1 335 2 is_stmt 1 view .LVU185
 835 0028 04F11100 		add	r0, r4, #17
 836 002c 07F03F01 		and	r1, r7, #63
 837 0030 C0B2     		uxtb	r0, r0
 838 0032 FFF7FEFF 		bl	nRF24_WriteReg
 839              	.LVL99:
 336:Drivers/BSP/nrf24l01/nrf24.c **** 
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 22


 337:Drivers/BSP/nrf24l01/nrf24.c **** 	// Set auto acknowledgment for a specified pipe (EN_AA register)
 338:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_EN_AA);
 840              		.loc 1 338 2 view .LVU186
 841              		.loc 1 338 8 is_stmt 0 view .LVU187
 842 0036 4046     		mov	r0, r8
 843 0038 FFF7FEFF 		bl	nRF24_ReadReg
 844              	.LVL100:
 339:Drivers/BSP/nrf24l01/nrf24.c **** 	if (aa_state == nRF24_AA_ON) {
 845              		.loc 1 339 2 is_stmt 1 view .LVU188
 846              		.loc 1 339 5 is_stmt 0 view .LVU189
 847 003c 4645     		cmp	r6, r8
 848 003e 07D0     		beq	.L57
 340:Drivers/BSP/nrf24l01/nrf24.c **** 		reg |= (1U << pipe);
 341:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
 342:Drivers/BSP/nrf24l01/nrf24.c **** 		reg &= ~(1U << pipe);
 849              		.loc 1 342 3 is_stmt 1 view .LVU190
 850              		.loc 1 342 7 is_stmt 0 view .LVU191
 851 0040 20EA0501 		bic	r1, r0, r5
 852 0044 C9B2     		uxtb	r1, r1
 853              	.LVL101:
 854              	.L55:
 343:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 344:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_AA, reg);
 855              		.loc 1 344 2 is_stmt 1 view .LVU192
 856 0046 0120     		movs	r0, #1
 857 0048 FFF7FEFF 		bl	nRF24_WriteReg
 858              	.LVL102:
 345:Drivers/BSP/nrf24l01/nrf24.c **** }
 859              		.loc 1 345 1 is_stmt 0 view .LVU193
 860 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 861              	.LVL103:
 862              	.L57:
 340:Drivers/BSP/nrf24l01/nrf24.c **** 		reg |= (1U << pipe);
 863              		.loc 1 340 3 is_stmt 1 view .LVU194
 340:Drivers/BSP/nrf24l01/nrf24.c **** 		reg |= (1U << pipe);
 864              		.loc 1 340 7 is_stmt 0 view .LVU195
 865 0050 45EA0001 		orr	r1, r5, r0
 866 0054 C9B2     		uxtb	r1, r1
 867              	.LVL104:
 340:Drivers/BSP/nrf24l01/nrf24.c **** 		reg |= (1U << pipe);
 868              		.loc 1 340 7 view .LVU196
 869 0056 F6E7     		b	.L55
 870              		.cfi_endproc
 871              	.LFE126:
 873              		.section	.text.nRF24_ClosePipe,"ax",%progbits
 874              		.align	1
 875              		.global	nRF24_ClosePipe
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu softvfp
 881              	nRF24_ClosePipe:
 882              	.LVL105:
 883              	.LFB127:
 346:Drivers/BSP/nrf24l01/nrf24.c **** 
 347:Drivers/BSP/nrf24l01/nrf24.c **** // Disable specified RX pipe
 348:Drivers/BSP/nrf24l01/nrf24.c **** // input:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 23


 349:Drivers/BSP/nrf24l01/nrf24.c **** //   PIPE - number of RX pipe, value from 0 to 5
 350:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_ClosePipe(uint8_t pipe) {
 884              		.loc 1 350 36 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		.loc 1 350 36 is_stmt 0 view .LVU198
 889 0000 10B5     		push	{r4, lr}
 890              	.LCFI17:
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 4, -8
 893              		.cfi_offset 14, -4
 894 0002 0446     		mov	r4, r0
 351:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 895              		.loc 1 351 2 is_stmt 1 view .LVU199
 352:Drivers/BSP/nrf24l01/nrf24.c **** 
 353:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_EN_RXADDR);
 896              		.loc 1 353 2 view .LVU200
 897              		.loc 1 353 8 is_stmt 0 view .LVU201
 898 0004 0220     		movs	r0, #2
 899              	.LVL106:
 900              		.loc 1 353 8 view .LVU202
 901 0006 FFF7FEFF 		bl	nRF24_ReadReg
 902              	.LVL107:
 354:Drivers/BSP/nrf24l01/nrf24.c **** 	reg &= ~(1U << pipe);
 903              		.loc 1 354 2 is_stmt 1 view .LVU203
 904              		.loc 1 354 14 is_stmt 0 view .LVU204
 905 000a 0121     		movs	r1, #1
 906 000c A140     		lsls	r1, r1, r4
 907              		.loc 1 354 6 view .LVU205
 908 000e 20EA0101 		bic	r1, r0, r1
 909              	.LVL108:
 355:Drivers/BSP/nrf24l01/nrf24.c **** 	reg &= nRF24_MASK_EN_RX;
 910              		.loc 1 355 2 is_stmt 1 view .LVU206
 356:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_RXADDR, reg);
 911              		.loc 1 356 2 view .LVU207
 912 0012 01F03F01 		and	r1, r1, #63
 913              	.LVL109:
 914              		.loc 1 356 2 is_stmt 0 view .LVU208
 915 0016 0220     		movs	r0, #2
 916              	.LVL110:
 917              		.loc 1 356 2 view .LVU209
 918 0018 FFF7FEFF 		bl	nRF24_WriteReg
 919              	.LVL111:
 357:Drivers/BSP/nrf24l01/nrf24.c **** }
 920              		.loc 1 357 1 view .LVU210
 921 001c 10BD     		pop	{r4, pc}
 922              		.loc 1 357 1 view .LVU211
 923              		.cfi_endproc
 924              	.LFE127:
 926              		.section	.text.nRF24_EnableAA,"ax",%progbits
 927              		.align	1
 928              		.global	nRF24_EnableAA
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 24


 934              	nRF24_EnableAA:
 935              	.LVL112:
 936              	.LFB128:
 358:Drivers/BSP/nrf24l01/nrf24.c **** 
 359:Drivers/BSP/nrf24l01/nrf24.c **** // Enable the auto retransmit (a.k.a. enhanced ShockBurst) for the specified RX pipe
 360:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 361:Drivers/BSP/nrf24l01/nrf24.c **** //   pipe - number of the RX pipe, value from 0 to 5
 362:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_EnableAA(uint8_t pipe) {
 937              		.loc 1 362 35 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		.loc 1 362 35 is_stmt 0 view .LVU213
 942 0000 10B5     		push	{r4, lr}
 943              	.LCFI18:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 4, -8
 946              		.cfi_offset 14, -4
 947 0002 0446     		mov	r4, r0
 363:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 948              		.loc 1 363 2 is_stmt 1 view .LVU214
 364:Drivers/BSP/nrf24l01/nrf24.c **** 
 365:Drivers/BSP/nrf24l01/nrf24.c **** 	// Set bit in EN_AA register
 366:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_EN_AA);
 949              		.loc 1 366 2 view .LVU215
 950              		.loc 1 366 8 is_stmt 0 view .LVU216
 951 0004 0120     		movs	r0, #1
 952              	.LVL113:
 953              		.loc 1 366 8 view .LVU217
 954 0006 FFF7FEFF 		bl	nRF24_ReadReg
 955              	.LVL114:
 367:Drivers/BSP/nrf24l01/nrf24.c **** 	reg |= (1U << pipe);
 956              		.loc 1 367 2 is_stmt 1 view .LVU218
 957              		.loc 1 367 13 is_stmt 0 view .LVU219
 958 000a 0123     		movs	r3, #1
 959 000c 03FA04F4 		lsl	r4, r3, r4
 960              		.loc 1 367 6 view .LVU220
 961 0010 0443     		orrs	r4, r4, r0
 962              	.LVL115:
 368:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_AA, reg);
 963              		.loc 1 368 2 is_stmt 1 view .LVU221
 964 0012 E1B2     		uxtb	r1, r4
 965 0014 1846     		mov	r0, r3
 966 0016 FFF7FEFF 		bl	nRF24_WriteReg
 967              	.LVL116:
 369:Drivers/BSP/nrf24l01/nrf24.c **** }
 968              		.loc 1 369 1 is_stmt 0 view .LVU222
 969 001a 10BD     		pop	{r4, pc}
 970              		.loc 1 369 1 view .LVU223
 971              		.cfi_endproc
 972              	.LFE128:
 974              		.section	.text.nRF24_DisableAA,"ax",%progbits
 975              		.align	1
 976              		.global	nRF24_DisableAA
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 25


 980              		.fpu softvfp
 982              	nRF24_DisableAA:
 983              	.LVL117:
 984              	.LFB129:
 370:Drivers/BSP/nrf24l01/nrf24.c **** 
 371:Drivers/BSP/nrf24l01/nrf24.c **** // Disable the auto retransmit (a.k.a. enhanced ShockBurst) for one or all RX pipes
 372:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 373:Drivers/BSP/nrf24l01/nrf24.c **** //   pipe - number of the RX pipe, value from 0 to 5, any other value will disable AA for all RX pi
 374:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_DisableAA(uint8_t pipe) {
 985              		.loc 1 374 36 is_stmt 1 view -0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		.loc 1 374 36 is_stmt 0 view .LVU225
 990 0000 10B5     		push	{r4, lr}
 991              	.LCFI19:
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 4, -8
 994              		.cfi_offset 14, -4
 375:Drivers/BSP/nrf24l01/nrf24.c **** 	if (pipe > 5U) {
 995              		.loc 1 375 2 is_stmt 1 view .LVU226
 996              		.loc 1 375 5 is_stmt 0 view .LVU227
 997 0002 0528     		cmp	r0, #5
 998 0004 04D9     		bls	.L63
 376:Drivers/BSP/nrf24l01/nrf24.c **** 		// Disable Auto-ACK for ALL pipes
 377:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_WriteReg(nRF24_REG_EN_AA, 0x00);
 999              		.loc 1 377 3 is_stmt 1 view .LVU228
 1000 0006 0021     		movs	r1, #0
 1001 0008 0120     		movs	r0, #1
 1002              	.LVL118:
 1003              		.loc 1 377 3 is_stmt 0 view .LVU229
 1004 000a FFF7FEFF 		bl	nRF24_WriteReg
 1005              	.LVL119:
 1006              	.L62:
 378:Drivers/BSP/nrf24l01/nrf24.c **** 	} else {
 379:Drivers/BSP/nrf24l01/nrf24.c **** 		// Clear bit in the EN_AA register
 380:Drivers/BSP/nrf24l01/nrf24.c **** 		uint8_t reg;
 381:Drivers/BSP/nrf24l01/nrf24.c **** 		reg = nRF24_ReadReg(nRF24_REG_EN_AA);
 382:Drivers/BSP/nrf24l01/nrf24.c **** 		reg &= ~(1U << pipe);
 383:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_WriteReg(nRF24_REG_EN_AA, reg);
 384:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 385:Drivers/BSP/nrf24l01/nrf24.c **** }
 1007              		.loc 1 385 1 view .LVU230
 1008 000e 10BD     		pop	{r4, pc}
 1009              	.LVL120:
 1010              	.L63:
 1011              		.loc 1 385 1 view .LVU231
 1012 0010 0446     		mov	r4, r0
 1013              	.LBB2:
 380:Drivers/BSP/nrf24l01/nrf24.c **** 		reg = nRF24_ReadReg(nRF24_REG_EN_AA);
 1014              		.loc 1 380 3 is_stmt 1 view .LVU232
 381:Drivers/BSP/nrf24l01/nrf24.c **** 		reg &= ~(1U << pipe);
 1015              		.loc 1 381 3 view .LVU233
 381:Drivers/BSP/nrf24l01/nrf24.c **** 		reg &= ~(1U << pipe);
 1016              		.loc 1 381 9 is_stmt 0 view .LVU234
 1017 0012 0120     		movs	r0, #1
 1018              	.LVL121:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 26


 381:Drivers/BSP/nrf24l01/nrf24.c **** 		reg &= ~(1U << pipe);
 1019              		.loc 1 381 9 view .LVU235
 1020 0014 FFF7FEFF 		bl	nRF24_ReadReg
 1021              	.LVL122:
 382:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_WriteReg(nRF24_REG_EN_AA, reg);
 1022              		.loc 1 382 3 is_stmt 1 view .LVU236
 382:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_WriteReg(nRF24_REG_EN_AA, reg);
 1023              		.loc 1 382 15 is_stmt 0 view .LVU237
 1024 0018 0123     		movs	r3, #1
 1025 001a 03FA04F4 		lsl	r4, r3, r4
 382:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_WriteReg(nRF24_REG_EN_AA, reg);
 1026              		.loc 1 382 7 view .LVU238
 1027 001e 20EA0404 		bic	r4, r0, r4
 1028              	.LVL123:
 383:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1029              		.loc 1 383 3 is_stmt 1 view .LVU239
 1030 0022 E1B2     		uxtb	r1, r4
 1031 0024 1846     		mov	r0, r3
 1032 0026 FFF7FEFF 		bl	nRF24_WriteReg
 1033              	.LVL124:
 1034              	.LBE2:
 1035              		.loc 1 385 1 is_stmt 0 view .LVU240
 1036 002a F0E7     		b	.L62
 1037              		.cfi_endproc
 1038              	.LFE129:
 1040              		.section	.text.nRF24_GetAddrWidth,"ax",%progbits
 1041              		.align	1
 1042              		.global	nRF24_GetAddrWidth
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu softvfp
 1048              	nRF24_GetAddrWidth:
 1049              	.LFB130:
 386:Drivers/BSP/nrf24l01/nrf24.c **** 
 387:Drivers/BSP/nrf24l01/nrf24.c **** // Get address length
 388:Drivers/BSP/nrf24l01/nrf24.c **** // return: the length of the address configured in the transceiver,
 389:Drivers/BSP/nrf24l01/nrf24.c **** //         value from 3 to 5
 390:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetAddrWidth(void) {
 1050              		.loc 1 390 34 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054 0000 08B5     		push	{r3, lr}
 1055              	.LCFI20:
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 3, -8
 1058              		.cfi_offset 14, -4
 391:Drivers/BSP/nrf24l01/nrf24.c **** 	return nRF24_ReadReg(nRF24_REG_SETUP_AW) + 2U;
 1059              		.loc 1 391 2 view .LVU242
 1060              		.loc 1 391 9 is_stmt 0 view .LVU243
 1061 0002 0320     		movs	r0, #3
 1062 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1063              	.LVL125:
 1064              		.loc 1 391 43 view .LVU244
 1065 0008 0230     		adds	r0, r0, #2
 392:Drivers/BSP/nrf24l01/nrf24.c **** }
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 27


 1066              		.loc 1 392 1 view .LVU245
 1067 000a C0B2     		uxtb	r0, r0
 1068 000c 08BD     		pop	{r3, pc}
 1069              		.cfi_endproc
 1070              	.LFE130:
 1072              		.section	.text.nRF24_SetAddr,"ax",%progbits
 1073              		.align	1
 1074              		.global	nRF24_SetAddr
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu softvfp
 1080              	nRF24_SetAddr:
 1081              	.LVL126:
 1082              	.LFB123:
 258:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t addr_width;
 1083              		.loc 1 258 55 is_stmt 1 view -0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 258:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t addr_width;
 1087              		.loc 1 258 55 is_stmt 0 view .LVU247
 1088 0000 38B5     		push	{r3, r4, r5, lr}
 1089              	.LCFI21:
 1090              		.cfi_def_cfa_offset 16
 1091              		.cfi_offset 3, -16
 1092              		.cfi_offset 4, -12
 1093              		.cfi_offset 5, -8
 1094              		.cfi_offset 14, -4
 1095 0002 0446     		mov	r4, r0
 1096 0004 0D46     		mov	r5, r1
 259:Drivers/BSP/nrf24l01/nrf24.c **** 
 1097              		.loc 1 259 2 is_stmt 1 view .LVU248
 262:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPETX:
 1098              		.loc 1 262 2 view .LVU249
 1099 0006 0528     		cmp	r0, #5
 1100 0008 0ED8     		bhi	.L69
 1101 000a 0228     		cmp	r0, #2
 1102 000c 0FD2     		bcs	.L70
 1103 000e 0128     		cmp	r0, #1
 1104 0010 0CD8     		bhi	.L68
 1105              	.L72:
 267:Drivers/BSP/nrf24l01/nrf24.c **** #if (!nRF24_ADDR_REVERSE)
 1106              		.loc 1 267 4 view .LVU250
 267:Drivers/BSP/nrf24l01/nrf24.c **** #if (!nRF24_ADDR_REVERSE)
 1107              		.loc 1 267 17 is_stmt 0 view .LVU251
 1108 0012 FFF7FEFF 		bl	nRF24_GetAddrWidth
 1109              	.LVL127:
 267:Drivers/BSP/nrf24l01/nrf24.c **** #if (!nRF24_ADDR_REVERSE)
 1110              		.loc 1 267 17 view .LVU252
 1111 0016 0246     		mov	r2, r0
 1112              	.LVL128:
 269:Drivers/BSP/nrf24l01/nrf24.c **** 				nRF24_CMD_W_REGISTER | nRF24_ADDR_REGS[pipe],
 1113              		.loc 1 269 4 is_stmt 1 view .LVU253
 270:Drivers/BSP/nrf24l01/nrf24.c **** 				(uint8_t *)addr,
 1114              		.loc 1 270 43 is_stmt 0 view .LVU254
 1115 0018 084B     		ldr	r3, .L74
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 28


 1116 001a 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 269:Drivers/BSP/nrf24l01/nrf24.c **** 				nRF24_CMD_W_REGISTER | nRF24_ADDR_REGS[pipe],
 1117              		.loc 1 269 4 view .LVU255
 1118 001c 2946     		mov	r1, r5
 1119 001e 40F02000 		orr	r0, r0, #32
 1120 0022 FFF7FEFF 		bl	nRF24_WriteMBReg
 1121              	.LVL129:
 281:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPE2:
 1122              		.loc 1 281 4 is_stmt 1 view .LVU256
 1123 0026 01E0     		b	.L68
 1124              	.LVL130:
 1125              	.L69:
 262:Drivers/BSP/nrf24l01/nrf24.c **** 		case nRF24_PIPETX:
 1126              		.loc 1 262 2 is_stmt 0 view .LVU257
 1127 0028 0628     		cmp	r0, #6
 1128 002a F2D0     		beq	.L72
 1129              	.LVL131:
 1130              	.L68:
 294:Drivers/BSP/nrf24l01/nrf24.c **** 
 1131              		.loc 1 294 1 view .LVU258
 1132 002c 38BD     		pop	{r3, r4, r5, pc}
 1133              	.LVL132:
 1134              	.L70:
 288:Drivers/BSP/nrf24l01/nrf24.c **** 			break;
 1135              		.loc 1 288 4 is_stmt 1 view .LVU259
 1136 002e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1137              	.LVL133:
 288:Drivers/BSP/nrf24l01/nrf24.c **** 			break;
 1138              		.loc 1 288 4 is_stmt 0 view .LVU260
 1139 0030 024B     		ldr	r3, .L74
 1140 0032 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1141              	.LVL134:
 288:Drivers/BSP/nrf24l01/nrf24.c **** 			break;
 1142              		.loc 1 288 4 view .LVU261
 1143 0034 FFF7FEFF 		bl	nRF24_WriteReg
 1144              	.LVL135:
 289:Drivers/BSP/nrf24l01/nrf24.c **** 		default:
 1145              		.loc 1 289 4 is_stmt 1 view .LVU262
 294:Drivers/BSP/nrf24l01/nrf24.c **** 
 1146              		.loc 1 294 1 is_stmt 0 view .LVU263
 1147 0038 F8E7     		b	.L68
 1148              	.L75:
 1149 003a 00BF     		.align	2
 1150              	.L74:
 1151 003c 00000000 		.word	.LANCHOR0
 1152              		.cfi_endproc
 1153              	.LFE123:
 1155              		.section	.text.nRF24_GetStatus,"ax",%progbits
 1156              		.align	1
 1157              		.global	nRF24_GetStatus
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu softvfp
 1163              	nRF24_GetStatus:
 1164              	.LFB131:
 393:Drivers/BSP/nrf24l01/nrf24.c **** 
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 29


 394:Drivers/BSP/nrf24l01/nrf24.c **** // Get value of the STATUS register
 395:Drivers/BSP/nrf24l01/nrf24.c **** // return: value of STATUS register
 396:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetStatus(void) {
 1165              		.loc 1 396 31 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169 0000 08B5     		push	{r3, lr}
 1170              	.LCFI22:
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 3, -8
 1173              		.cfi_offset 14, -4
 397:Drivers/BSP/nrf24l01/nrf24.c **** 	return nRF24_ReadReg(nRF24_REG_STATUS);
 1174              		.loc 1 397 2 view .LVU265
 1175              		.loc 1 397 9 is_stmt 0 view .LVU266
 1176 0002 0720     		movs	r0, #7
 1177 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1178              	.LVL136:
 398:Drivers/BSP/nrf24l01/nrf24.c **** }
 1179              		.loc 1 398 1 view .LVU267
 1180 0008 08BD     		pop	{r3, pc}
 1181              		.cfi_endproc
 1182              	.LFE131:
 1184              		.section	.text.nRF24_GetIRQFlags,"ax",%progbits
 1185              		.align	1
 1186              		.global	nRF24_GetIRQFlags
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
 1190              		.fpu softvfp
 1192              	nRF24_GetIRQFlags:
 1193              	.LFB132:
 399:Drivers/BSP/nrf24l01/nrf24.c **** 
 400:Drivers/BSP/nrf24l01/nrf24.c **** // Get pending IRQ flags
 401:Drivers/BSP/nrf24l01/nrf24.c **** // return: current status of RX_DR, TX_DS and MAX_RT bits of the STATUS register
 402:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetIRQFlags(void) {
 1194              		.loc 1 402 33 is_stmt 1 view -0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198 0000 08B5     		push	{r3, lr}
 1199              	.LCFI23:
 1200              		.cfi_def_cfa_offset 8
 1201              		.cfi_offset 3, -8
 1202              		.cfi_offset 14, -4
 403:Drivers/BSP/nrf24l01/nrf24.c **** 	return (nRF24_ReadReg(nRF24_REG_STATUS) & nRF24_MASK_STATUS_IRQ);
 1203              		.loc 1 403 2 view .LVU269
 1204              		.loc 1 403 10 is_stmt 0 view .LVU270
 1205 0002 0720     		movs	r0, #7
 1206 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1207              	.LVL137:
 404:Drivers/BSP/nrf24l01/nrf24.c **** }
 1208              		.loc 1 404 1 view .LVU271
 1209 0008 00F07000 		and	r0, r0, #112
 1210 000c 08BD     		pop	{r3, pc}
 1211              		.cfi_endproc
 1212              	.LFE132:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 30


 1214              		.section	.text.nRF24_GetStatus_RXFIFO,"ax",%progbits
 1215              		.align	1
 1216              		.global	nRF24_GetStatus_RXFIFO
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.fpu softvfp
 1222              	nRF24_GetStatus_RXFIFO:
 1223              	.LFB133:
 405:Drivers/BSP/nrf24l01/nrf24.c **** 
 406:Drivers/BSP/nrf24l01/nrf24.c **** // Get status of the RX FIFO
 407:Drivers/BSP/nrf24l01/nrf24.c **** // return: one of the nRF24_STATUS_RXFIFO_xx values
 408:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetStatus_RXFIFO(void) {
 1224              		.loc 1 408 38 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 08B5     		push	{r3, lr}
 1229              	.LCFI24:
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 3, -8
 1232              		.cfi_offset 14, -4
 409:Drivers/BSP/nrf24l01/nrf24.c **** 	return (nRF24_ReadReg(nRF24_REG_FIFO_STATUS) & nRF24_MASK_RXFIFO);
 1233              		.loc 1 409 2 view .LVU273
 1234              		.loc 1 409 10 is_stmt 0 view .LVU274
 1235 0002 1720     		movs	r0, #23
 1236 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1237              	.LVL138:
 410:Drivers/BSP/nrf24l01/nrf24.c **** }
 1238              		.loc 1 410 1 view .LVU275
 1239 0008 00F00300 		and	r0, r0, #3
 1240 000c 08BD     		pop	{r3, pc}
 1241              		.cfi_endproc
 1242              	.LFE133:
 1244              		.section	.text.nRF24_GetStatus_TXFIFO,"ax",%progbits
 1245              		.align	1
 1246              		.global	nRF24_GetStatus_TXFIFO
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1250              		.fpu softvfp
 1252              	nRF24_GetStatus_TXFIFO:
 1253              	.LFB134:
 411:Drivers/BSP/nrf24l01/nrf24.c **** 
 412:Drivers/BSP/nrf24l01/nrf24.c **** // Get status of the TX FIFO
 413:Drivers/BSP/nrf24l01/nrf24.c **** // return: one of the nRF24_STATUS_TXFIFO_xx values
 414:Drivers/BSP/nrf24l01/nrf24.c **** // note: the TX_REUSE bit ignored
 415:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetStatus_TXFIFO(void) {
 1254              		.loc 1 415 38 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258 0000 08B5     		push	{r3, lr}
 1259              	.LCFI25:
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 3, -8
 1262              		.cfi_offset 14, -4
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 31


 416:Drivers/BSP/nrf24l01/nrf24.c **** 	return ((nRF24_ReadReg(nRF24_REG_FIFO_STATUS) & nRF24_MASK_TXFIFO) >> 4);
 1263              		.loc 1 416 2 view .LVU277
 1264              		.loc 1 416 11 is_stmt 0 view .LVU278
 1265 0002 1720     		movs	r0, #23
 1266 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1267              	.LVL139:
 417:Drivers/BSP/nrf24l01/nrf24.c **** }
 1268              		.loc 1 417 1 view .LVU279
 1269 0008 C0F30110 		ubfx	r0, r0, #4, #2
 1270 000c 08BD     		pop	{r3, pc}
 1271              		.cfi_endproc
 1272              	.LFE134:
 1274              		.section	.text.nRF24_GetRXSource,"ax",%progbits
 1275              		.align	1
 1276              		.global	nRF24_GetRXSource
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu softvfp
 1282              	nRF24_GetRXSource:
 1283              	.LFB135:
 418:Drivers/BSP/nrf24l01/nrf24.c **** 
 419:Drivers/BSP/nrf24l01/nrf24.c **** // Get pipe number for the payload available for reading from RX FIFO
 420:Drivers/BSP/nrf24l01/nrf24.c **** // return: pipe number or 0x07 if the RX FIFO is empty
 421:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetRXSource(void) {
 1284              		.loc 1 421 33 is_stmt 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288 0000 08B5     		push	{r3, lr}
 1289              	.LCFI26:
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 3, -8
 1292              		.cfi_offset 14, -4
 422:Drivers/BSP/nrf24l01/nrf24.c **** 	return ((nRF24_ReadReg(nRF24_REG_STATUS) & nRF24_MASK_RX_P_NO) >> 1);
 1293              		.loc 1 422 2 view .LVU281
 1294              		.loc 1 422 11 is_stmt 0 view .LVU282
 1295 0002 0720     		movs	r0, #7
 1296 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1297              	.LVL140:
 423:Drivers/BSP/nrf24l01/nrf24.c **** }
 1298              		.loc 1 423 1 view .LVU283
 1299 0008 C0F34200 		ubfx	r0, r0, #1, #3
 1300 000c 08BD     		pop	{r3, pc}
 1301              		.cfi_endproc
 1302              	.LFE135:
 1304              		.section	.text.nRF24_GetRetransmitCounters,"ax",%progbits
 1305              		.align	1
 1306              		.global	nRF24_GetRetransmitCounters
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu softvfp
 1312              	nRF24_GetRetransmitCounters:
 1313              	.LFB136:
 424:Drivers/BSP/nrf24l01/nrf24.c **** 
 425:Drivers/BSP/nrf24l01/nrf24.c **** // Get auto retransmit statistic
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 32


 426:Drivers/BSP/nrf24l01/nrf24.c **** // return: value of OBSERVE_TX register which contains two counters encoded in nibbles:
 427:Drivers/BSP/nrf24l01/nrf24.c **** //   high - lost packets count (max value 15, can be reseted by write to RF_CH register)
 428:Drivers/BSP/nrf24l01/nrf24.c **** //   low  - retransmitted packets count (max value 15, reseted when new transmission starts)
 429:Drivers/BSP/nrf24l01/nrf24.c **** uint8_t nRF24_GetRetransmitCounters(void) {
 1314              		.loc 1 429 43 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318 0000 08B5     		push	{r3, lr}
 1319              	.LCFI27:
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 3, -8
 1322              		.cfi_offset 14, -4
 430:Drivers/BSP/nrf24l01/nrf24.c **** 	return (nRF24_ReadReg(nRF24_REG_OBSERVE_TX));
 1323              		.loc 1 430 2 view .LVU285
 1324              		.loc 1 430 10 is_stmt 0 view .LVU286
 1325 0002 0820     		movs	r0, #8
 1326 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1327              	.LVL141:
 431:Drivers/BSP/nrf24l01/nrf24.c **** }
 1328              		.loc 1 431 1 view .LVU287
 1329 0008 08BD     		pop	{r3, pc}
 1330              		.cfi_endproc
 1331              	.LFE136:
 1333              		.section	.text.nRF24_ResetPLOS,"ax",%progbits
 1334              		.align	1
 1335              		.global	nRF24_ResetPLOS
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu softvfp
 1341              	nRF24_ResetPLOS:
 1342              	.LFB137:
 432:Drivers/BSP/nrf24l01/nrf24.c **** 
 433:Drivers/BSP/nrf24l01/nrf24.c **** // Reset packet lost counter (PLOS_CNT bits in OBSERVER_TX register)
 434:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_ResetPLOS(void) {
 1343              		.loc 1 434 28 is_stmt 1 view -0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347 0000 08B5     		push	{r3, lr}
 1348              	.LCFI28:
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 3, -8
 1351              		.cfi_offset 14, -4
 435:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 1352              		.loc 1 435 2 view .LVU289
 436:Drivers/BSP/nrf24l01/nrf24.c **** 
 437:Drivers/BSP/nrf24l01/nrf24.c **** 	// The PLOS counter is reset after write to RF_CH register
 438:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_RF_CH);
 1353              		.loc 1 438 2 view .LVU290
 1354              		.loc 1 438 8 is_stmt 0 view .LVU291
 1355 0002 0520     		movs	r0, #5
 1356 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1357              	.LVL142:
 1358 0008 0146     		mov	r1, r0
 1359              	.LVL143:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 33


 439:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_CH, reg);
 1360              		.loc 1 439 2 is_stmt 1 view .LVU292
 1361 000a 0520     		movs	r0, #5
 1362 000c FFF7FEFF 		bl	nRF24_WriteReg
 1363              	.LVL144:
 440:Drivers/BSP/nrf24l01/nrf24.c **** }
 1364              		.loc 1 440 1 is_stmt 0 view .LVU293
 1365 0010 08BD     		pop	{r3, pc}
 1366              		.cfi_endproc
 1367              	.LFE137:
 1369              		.section	.text.nRF24_FlushTX,"ax",%progbits
 1370              		.align	1
 1371              		.global	nRF24_FlushTX
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu softvfp
 1377              	nRF24_FlushTX:
 1378              	.LFB138:
 441:Drivers/BSP/nrf24l01/nrf24.c **** 
 442:Drivers/BSP/nrf24l01/nrf24.c **** // Flush the TX FIFO
 443:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_FlushTX(void) {
 1379              		.loc 1 443 26 is_stmt 1 view -0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383 0000 08B5     		push	{r3, lr}
 1384              	.LCFI29:
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 3, -8
 1387              		.cfi_offset 14, -4
 444:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_CMD_FLUSH_TX, nRF24_CMD_NOP);
 1388              		.loc 1 444 2 view .LVU295
 1389 0002 FF21     		movs	r1, #255
 1390 0004 E120     		movs	r0, #225
 1391 0006 FFF7FEFF 		bl	nRF24_WriteReg
 1392              	.LVL145:
 445:Drivers/BSP/nrf24l01/nrf24.c **** }
 1393              		.loc 1 445 1 is_stmt 0 view .LVU296
 1394 000a 08BD     		pop	{r3, pc}
 1395              		.cfi_endproc
 1396              	.LFE138:
 1398              		.section	.text.nRF24_FlushRX,"ax",%progbits
 1399              		.align	1
 1400              		.global	nRF24_FlushRX
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1404              		.fpu softvfp
 1406              	nRF24_FlushRX:
 1407              	.LFB139:
 446:Drivers/BSP/nrf24l01/nrf24.c **** 
 447:Drivers/BSP/nrf24l01/nrf24.c **** // Flush the RX FIFO
 448:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_FlushRX(void) {
 1408              		.loc 1 448 26 is_stmt 1 view -0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 34


 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412 0000 08B5     		push	{r3, lr}
 1413              	.LCFI30:
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 3, -8
 1416              		.cfi_offset 14, -4
 449:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_CMD_FLUSH_RX, nRF24_CMD_NOP);
 1417              		.loc 1 449 2 view .LVU298
 1418 0002 FF21     		movs	r1, #255
 1419 0004 E220     		movs	r0, #226
 1420 0006 FFF7FEFF 		bl	nRF24_WriteReg
 1421              	.LVL146:
 450:Drivers/BSP/nrf24l01/nrf24.c **** }
 1422              		.loc 1 450 1 is_stmt 0 view .LVU299
 1423 000a 08BD     		pop	{r3, pc}
 1424              		.cfi_endproc
 1425              	.LFE139:
 1427              		.section	.text.nRF24_ClearIRQFlags,"ax",%progbits
 1428              		.align	1
 1429              		.global	nRF24_ClearIRQFlags
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu softvfp
 1435              	nRF24_ClearIRQFlags:
 1436              	.LFB140:
 451:Drivers/BSP/nrf24l01/nrf24.c **** 
 452:Drivers/BSP/nrf24l01/nrf24.c **** // Clear any pending IRQ flags
 453:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_ClearIRQFlags(void) {
 1437              		.loc 1 453 32 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 08B5     		push	{r3, lr}
 1442              	.LCFI31:
 1443              		.cfi_def_cfa_offset 8
 1444              		.cfi_offset 3, -8
 1445              		.cfi_offset 14, -4
 454:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t reg;
 1446              		.loc 1 454 2 view .LVU301
 455:Drivers/BSP/nrf24l01/nrf24.c **** 
 456:Drivers/BSP/nrf24l01/nrf24.c **** 	// Clear RX_DR, TX_DS and MAX_RT bits of the STATUS register
 457:Drivers/BSP/nrf24l01/nrf24.c **** 	reg = nRF24_ReadReg(nRF24_REG_STATUS);
 1447              		.loc 1 457 2 view .LVU302
 1448              		.loc 1 457 8 is_stmt 0 view .LVU303
 1449 0002 0720     		movs	r0, #7
 1450 0004 FFF7FEFF 		bl	nRF24_ReadReg
 1451              	.LVL147:
 458:Drivers/BSP/nrf24l01/nrf24.c **** 	reg |= nRF24_MASK_STATUS_IRQ;
 1452              		.loc 1 458 2 is_stmt 1 view .LVU304
 1453              		.loc 1 458 6 is_stmt 0 view .LVU305
 1454 0008 40F07001 		orr	r1, r0, #112
 1455              	.LVL148:
 459:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_STATUS, reg);
 1456              		.loc 1 459 2 is_stmt 1 view .LVU306
 1457 000c C9B2     		uxtb	r1, r1
 1458              		.loc 1 459 2 is_stmt 0 view .LVU307
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 35


 1459 000e 0720     		movs	r0, #7
 1460 0010 FFF7FEFF 		bl	nRF24_WriteReg
 1461              	.LVL149:
 460:Drivers/BSP/nrf24l01/nrf24.c **** }
 1462              		.loc 1 460 1 view .LVU308
 1463 0014 08BD     		pop	{r3, pc}
 1464              		.cfi_endproc
 1465              	.LFE140:
 1467              		.section	.text.nRF24_Init,"ax",%progbits
 1468              		.align	1
 1469              		.global	nRF24_Init
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu softvfp
 1475              	nRF24_Init:
 1476              	.LFB115:
  88:Drivers/BSP/nrf24l01/nrf24.c **** 	// Write to the registers their initial values
 1477              		.loc 1 88 23 is_stmt 1 view -0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 8
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481 0000 10B5     		push	{r4, lr}
 1482              	.LCFI32:
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 4, -8
 1485              		.cfi_offset 14, -4
 1486 0002 82B0     		sub	sp, sp, #8
 1487              	.LCFI33:
 1488              		.cfi_def_cfa_offset 16
  90:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_AA,      0x3F);
 1489              		.loc 1 90 2 view .LVU310
 1490 0004 0821     		movs	r1, #8
 1491 0006 0020     		movs	r0, #0
 1492 0008 FFF7FEFF 		bl	nRF24_WriteReg
 1493              	.LVL150:
  91:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_EN_RXADDR,  0x03);
 1494              		.loc 1 91 2 view .LVU311
 1495 000c 3F21     		movs	r1, #63
 1496 000e 0120     		movs	r0, #1
 1497 0010 FFF7FEFF 		bl	nRF24_WriteReg
 1498              	.LVL151:
  92:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_SETUP_AW,   0x03);
 1499              		.loc 1 92 2 view .LVU312
 1500 0014 0321     		movs	r1, #3
 1501 0016 0220     		movs	r0, #2
 1502 0018 FFF7FEFF 		bl	nRF24_WriteReg
 1503              	.LVL152:
  93:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_SETUP_RETR, 0x03);
 1504              		.loc 1 93 2 view .LVU313
 1505 001c 0321     		movs	r1, #3
 1506 001e 0846     		mov	r0, r1
 1507 0020 FFF7FEFF 		bl	nRF24_WriteReg
 1508              	.LVL153:
  94:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_CH,      0x02);
 1509              		.loc 1 94 2 view .LVU314
 1510 0024 0321     		movs	r1, #3
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 36


 1511 0026 0420     		movs	r0, #4
 1512 0028 FFF7FEFF 		bl	nRF24_WriteReg
 1513              	.LVL154:
  95:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RF_SETUP,   0x0E);
 1514              		.loc 1 95 2 view .LVU315
 1515 002c 0221     		movs	r1, #2
 1516 002e 0520     		movs	r0, #5
 1517 0030 FFF7FEFF 		bl	nRF24_WriteReg
 1518              	.LVL155:
  96:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_STATUS,     0x00);
 1519              		.loc 1 96 2 view .LVU316
 1520 0034 0E21     		movs	r1, #14
 1521 0036 0620     		movs	r0, #6
 1522 0038 FFF7FEFF 		bl	nRF24_WriteReg
 1523              	.LVL156:
  97:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P0,   0x00);
 1524              		.loc 1 97 2 view .LVU317
 1525 003c 0021     		movs	r1, #0
 1526 003e 0720     		movs	r0, #7
 1527 0040 FFF7FEFF 		bl	nRF24_WriteReg
 1528              	.LVL157:
  98:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P1,   0x00);
 1529              		.loc 1 98 2 view .LVU318
 1530 0044 0021     		movs	r1, #0
 1531 0046 1120     		movs	r0, #17
 1532 0048 FFF7FEFF 		bl	nRF24_WriteReg
 1533              	.LVL158:
  99:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P2,   0x00);
 1534              		.loc 1 99 2 view .LVU319
 1535 004c 0021     		movs	r1, #0
 1536 004e 1220     		movs	r0, #18
 1537 0050 FFF7FEFF 		bl	nRF24_WriteReg
 1538              	.LVL159:
 100:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P3,   0x00);
 1539              		.loc 1 100 2 view .LVU320
 1540 0054 0021     		movs	r1, #0
 1541 0056 1320     		movs	r0, #19
 1542 0058 FFF7FEFF 		bl	nRF24_WriteReg
 1543              	.LVL160:
 101:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P4,   0x00);
 1544              		.loc 1 101 2 view .LVU321
 1545 005c 0021     		movs	r1, #0
 1546 005e 1420     		movs	r0, #20
 1547 0060 FFF7FEFF 		bl	nRF24_WriteReg
 1548              	.LVL161:
 102:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_RX_PW_P5,   0x00);
 1549              		.loc 1 102 2 view .LVU322
 1550 0064 0021     		movs	r1, #0
 1551 0066 1520     		movs	r0, #21
 1552 0068 FFF7FEFF 		bl	nRF24_WriteReg
 1553              	.LVL162:
 103:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_DYNPD,      0x00);
 1554              		.loc 1 103 2 view .LVU323
 1555 006c 0021     		movs	r1, #0
 1556 006e 1620     		movs	r0, #22
 1557 0070 FFF7FEFF 		bl	nRF24_WriteReg
 1558              	.LVL163:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 37


 104:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteReg(nRF24_REG_FEATURE,    0x00);
 1559              		.loc 1 104 2 view .LVU324
 1560 0074 0021     		movs	r1, #0
 1561 0076 1C20     		movs	r0, #28
 1562 0078 FFF7FEFF 		bl	nRF24_WriteReg
 1563              	.LVL164:
 105:Drivers/BSP/nrf24l01/nrf24.c **** 
 1564              		.loc 1 105 2 view .LVU325
 1565 007c 0021     		movs	r1, #0
 1566 007e 1D20     		movs	r0, #29
 1567 0080 FFF7FEFF 		bl	nRF24_WriteReg
 1568              	.LVL165:
 108:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t idx;
 1569              		.loc 1 108 2 view .LVU326
 109:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 0U; idx < sizeof(addr); idx++) {
 1570              		.loc 1 109 2 view .LVU327
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1571              		.loc 1 110 2 view .LVU328
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1572              		.loc 1 110 11 is_stmt 0 view .LVU329
 1573 0084 0023     		movs	r3, #0
 1574              	.LVL166:
 1575              	.L97:
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1576              		.loc 1 110 17 is_stmt 1 discriminator 1 view .LVU330
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1577              		.loc 1 110 2 is_stmt 0 discriminator 1 view .LVU331
 1578 0086 042B     		cmp	r3, #4
 1579 0088 07D8     		bhi	.L104
 111:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1580              		.loc 1 111 3 is_stmt 1 discriminator 3 view .LVU332
 111:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1581              		.loc 1 111 13 is_stmt 0 discriminator 3 view .LVU333
 1582 008a 02AA     		add	r2, sp, #8
 1583 008c 1A44     		add	r2, r2, r3
 1584 008e E721     		movs	r1, #231
 1585 0090 02F8081C 		strb	r1, [r2, #-8]
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1586              		.loc 1 110 37 is_stmt 1 discriminator 3 view .LVU334
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1587              		.loc 1 110 40 is_stmt 0 discriminator 3 view .LVU335
 1588 0094 0133     		adds	r3, r3, #1
 1589              	.LVL167:
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1590              		.loc 1 110 40 discriminator 3 view .LVU336
 1591 0096 DBB2     		uxtb	r3, r3
 1592              	.LVL168:
 110:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xE7;
 1593              		.loc 1 110 40 discriminator 3 view .LVU337
 1594 0098 F5E7     		b	.L97
 1595              	.L104:
 113:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_SetAddr(nRF24_PIPE0, addr);
 1596              		.loc 1 113 2 is_stmt 1 view .LVU338
 1597 009a 6946     		mov	r1, sp
 1598 009c 0620     		movs	r0, #6
 1599 009e FFF7FEFF 		bl	nRF24_SetAddr
 1600              	.LVL169:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 38


 114:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 0U; idx < sizeof(addr); idx++) {
 1601              		.loc 1 114 2 view .LVU339
 1602 00a2 6946     		mov	r1, sp
 1603 00a4 0020     		movs	r0, #0
 1604 00a6 FFF7FEFF 		bl	nRF24_SetAddr
 1605              	.LVL170:
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1606              		.loc 1 115 2 view .LVU340
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1607              		.loc 1 115 11 is_stmt 0 view .LVU341
 1608 00aa 0023     		movs	r3, #0
 1609              	.LVL171:
 1610              	.L99:
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1611              		.loc 1 115 17 is_stmt 1 discriminator 1 view .LVU342
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1612              		.loc 1 115 2 is_stmt 0 discriminator 1 view .LVU343
 1613 00ac 042B     		cmp	r3, #4
 1614 00ae 07D8     		bhi	.L105
 116:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1615              		.loc 1 116 3 is_stmt 1 discriminator 3 view .LVU344
 116:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1616              		.loc 1 116 13 is_stmt 0 discriminator 3 view .LVU345
 1617 00b0 02AA     		add	r2, sp, #8
 1618 00b2 1A44     		add	r2, r2, r3
 1619 00b4 C221     		movs	r1, #194
 1620 00b6 02F8081C 		strb	r1, [r2, #-8]
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1621              		.loc 1 115 37 is_stmt 1 discriminator 3 view .LVU346
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1622              		.loc 1 115 40 is_stmt 0 discriminator 3 view .LVU347
 1623 00ba 0133     		adds	r3, r3, #1
 1624              	.LVL172:
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1625              		.loc 1 115 40 discriminator 3 view .LVU348
 1626 00bc DBB2     		uxtb	r3, r3
 1627              	.LVL173:
 115:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[idx] = 0xC2;
 1628              		.loc 1 115 40 discriminator 3 view .LVU349
 1629 00be F5E7     		b	.L99
 1630              	.L105:
 118:Drivers/BSP/nrf24l01/nrf24.c **** 	for (idx = 2U; idx < 6U; idx++) {
 1631              		.loc 1 118 2 is_stmt 1 view .LVU350
 1632 00c0 6946     		mov	r1, sp
 1633 00c2 0120     		movs	r0, #1
 1634 00c4 FFF7FEFF 		bl	nRF24_SetAddr
 1635              	.LVL174:
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1636              		.loc 1 119 2 view .LVU351
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1637              		.loc 1 119 11 is_stmt 0 view .LVU352
 1638 00c8 0224     		movs	r4, #2
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1639              		.loc 1 119 2 view .LVU353
 1640 00ca 09E0     		b	.L101
 1641              	.LVL175:
 1642              	.L102:
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 39


 120:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_SetAddr(idx, addr);
 1643              		.loc 1 120 3 is_stmt 1 discriminator 3 view .LVU354
 120:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_SetAddr(idx, addr);
 1644              		.loc 1 120 17 is_stmt 0 discriminator 3 view .LVU355
 1645 00cc A4F13F03 		sub	r3, r4, #63
 120:Drivers/BSP/nrf24l01/nrf24.c **** 		nRF24_SetAddr(idx, addr);
 1646              		.loc 1 120 11 discriminator 3 view .LVU356
 1647 00d0 8DF80030 		strb	r3, [sp]
 121:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1648              		.loc 1 121 3 is_stmt 1 discriminator 3 view .LVU357
 1649 00d4 6946     		mov	r1, sp
 1650 00d6 2046     		mov	r0, r4
 1651 00d8 FFF7FEFF 		bl	nRF24_SetAddr
 1652              	.LVL176:
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1653              		.loc 1 119 27 discriminator 3 view .LVU358
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1654              		.loc 1 119 30 is_stmt 0 discriminator 3 view .LVU359
 1655 00dc 0134     		adds	r4, r4, #1
 1656              	.LVL177:
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1657              		.loc 1 119 30 discriminator 3 view .LVU360
 1658 00de E4B2     		uxtb	r4, r4
 1659              	.LVL178:
 1660              	.L101:
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1661              		.loc 1 119 17 is_stmt 1 discriminator 1 view .LVU361
 119:Drivers/BSP/nrf24l01/nrf24.c **** 		addr[0] = idx + 0xC1;
 1662              		.loc 1 119 2 is_stmt 0 discriminator 1 view .LVU362
 1663 00e0 052C     		cmp	r4, #5
 1664 00e2 F3D9     		bls	.L102
 125:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_FlushTX();
 1665              		.loc 1 125 2 is_stmt 1 view .LVU363
 1666 00e4 FFF7FEFF 		bl	nRF24_FlushRX
 1667              	.LVL179:
 126:Drivers/BSP/nrf24l01/nrf24.c **** 
 1668              		.loc 1 126 2 view .LVU364
 1669 00e8 FFF7FEFF 		bl	nRF24_FlushTX
 1670              	.LVL180:
 129:Drivers/BSP/nrf24l01/nrf24.c **** 
 1671              		.loc 1 129 2 view .LVU365
 1672 00ec FFF7FEFF 		bl	nRF24_ClearIRQFlags
 1673              	.LVL181:
 132:Drivers/BSP/nrf24l01/nrf24.c **** }
 1674              		.loc 1 132 2 view .LVU366
 1675 00f0 0122     		movs	r2, #1
 1676 00f2 1021     		movs	r1, #16
 1677 00f4 0248     		ldr	r0, .L106
 1678 00f6 FFF7FEFF 		bl	HW_GPIO_Write
 1679              	.LVL182:
 133:Drivers/BSP/nrf24l01/nrf24.c **** 
 1680              		.loc 1 133 1 is_stmt 0 view .LVU367
 1681 00fa 02B0     		add	sp, sp, #8
 1682              	.LCFI34:
 1683              		.cfi_def_cfa_offset 8
 1684              		@ sp needed
 1685 00fc 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 40


 1686              	.LVL183:
 1687              	.L107:
 133:Drivers/BSP/nrf24l01/nrf24.c **** 
 1688              		.loc 1 133 1 view .LVU368
 1689 00fe 00BF     		.align	2
 1690              	.L106:
 1691 0100 00080140 		.word	1073809408
 1692              		.cfi_endproc
 1693              	.LFE115:
 1695              		.section	.text.nRF24_WritePayload,"ax",%progbits
 1696              		.align	1
 1697              		.global	nRF24_WritePayload
 1698              		.syntax unified
 1699              		.thumb
 1700              		.thumb_func
 1701              		.fpu softvfp
 1703              	nRF24_WritePayload:
 1704              	.LVL184:
 1705              	.LFB141:
 461:Drivers/BSP/nrf24l01/nrf24.c **** 
 462:Drivers/BSP/nrf24l01/nrf24.c **** // Write TX payload
 463:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 464:Drivers/BSP/nrf24l01/nrf24.c **** //   pBuf - pointer to the buffer with payload data
 465:Drivers/BSP/nrf24l01/nrf24.c **** //   length - payload length in bytes
 466:Drivers/BSP/nrf24l01/nrf24.c **** void nRF24_WritePayload(uint8_t *pBuf, uint8_t length) {
 1706              		.loc 1 466 56 is_stmt 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              		.loc 1 466 56 is_stmt 0 view .LVU370
 1711 0000 08B5     		push	{r3, lr}
 1712              	.LCFI35:
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 3, -8
 1715              		.cfi_offset 14, -4
 1716 0002 0A46     		mov	r2, r1
 467:Drivers/BSP/nrf24l01/nrf24.c **** 	nRF24_WriteMBReg(nRF24_CMD_W_TX_PAYLOAD, pBuf, length);
 1717              		.loc 1 467 2 is_stmt 1 view .LVU371
 1718 0004 0146     		mov	r1, r0
 1719              	.LVL185:
 1720              		.loc 1 467 2 is_stmt 0 view .LVU372
 1721 0006 A020     		movs	r0, #160
 1722              	.LVL186:
 1723              		.loc 1 467 2 view .LVU373
 1724 0008 FFF7FEFF 		bl	nRF24_WriteMBReg
 1725              	.LVL187:
 468:Drivers/BSP/nrf24l01/nrf24.c **** }
 1726              		.loc 1 468 1 view .LVU374
 1727 000c 08BD     		pop	{r3, pc}
 1728              		.cfi_endproc
 1729              	.LFE141:
 1731              		.section	.text.nRF24_ReadPayload,"ax",%progbits
 1732              		.align	1
 1733              		.global	nRF24_ReadPayload
 1734              		.syntax unified
 1735              		.thumb
 1736              		.thumb_func
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 41


 1737              		.fpu softvfp
 1739              	nRF24_ReadPayload:
 1740              	.LVL188:
 1741              	.LFB142:
 469:Drivers/BSP/nrf24l01/nrf24.c **** 
 470:Drivers/BSP/nrf24l01/nrf24.c **** // Read top level payload available in the RX FIFO
 471:Drivers/BSP/nrf24l01/nrf24.c **** // input:
 472:Drivers/BSP/nrf24l01/nrf24.c **** //   pBuf - pointer to the buffer to store a payload data
 473:Drivers/BSP/nrf24l01/nrf24.c **** //   length - pointer to variable to store a payload length
 474:Drivers/BSP/nrf24l01/nrf24.c **** // return: one of nRF24_RX_xx values
 475:Drivers/BSP/nrf24l01/nrf24.c **** //   nRF24_RX_PIPEX - packet has been received from the pipe number X
 476:Drivers/BSP/nrf24l01/nrf24.c **** //   nRF24_RX_EMPTY - the RX FIFO is empty
 477:Drivers/BSP/nrf24l01/nrf24.c **** nRF24_RXResult nRF24_ReadPayload(uint8_t *pBuf, uint8_t *length) {
 1742              		.loc 1 477 66 is_stmt 1 view -0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		.loc 1 477 66 is_stmt 0 view .LVU376
 1747 0000 70B5     		push	{r4, r5, r6, lr}
 1748              	.LCFI36:
 1749              		.cfi_def_cfa_offset 16
 1750              		.cfi_offset 4, -16
 1751              		.cfi_offset 5, -12
 1752              		.cfi_offset 6, -8
 1753              		.cfi_offset 14, -4
 1754 0002 0646     		mov	r6, r0
 1755 0004 0D46     		mov	r5, r1
 478:Drivers/BSP/nrf24l01/nrf24.c **** 	uint8_t pipe;
 1756              		.loc 1 478 2 is_stmt 1 view .LVU377
 479:Drivers/BSP/nrf24l01/nrf24.c **** 
 480:Drivers/BSP/nrf24l01/nrf24.c **** 	// Extract a payload pipe number from the STATUS register
 481:Drivers/BSP/nrf24l01/nrf24.c **** 	pipe = (nRF24_ReadReg(nRF24_REG_STATUS) & nRF24_MASK_RX_P_NO) >> 1;
 1757              		.loc 1 481 2 view .LVU378
 1758              		.loc 1 481 10 is_stmt 0 view .LVU379
 1759 0006 0720     		movs	r0, #7
 1760              	.LVL189:
 1761              		.loc 1 481 10 view .LVU380
 1762 0008 FFF7FEFF 		bl	nRF24_ReadReg
 1763              	.LVL190:
 1764              		.loc 1 481 7 view .LVU381
 1765 000c C0F34204 		ubfx	r4, r0, #1, #3
 1766              	.LVL191:
 482:Drivers/BSP/nrf24l01/nrf24.c **** 
 483:Drivers/BSP/nrf24l01/nrf24.c **** 	// RX FIFO empty?
 484:Drivers/BSP/nrf24l01/nrf24.c **** 	if (pipe < 6U) {
 1767              		.loc 1 484 2 is_stmt 1 view .LVU382
 1768              		.loc 1 484 5 is_stmt 0 view .LVU383
 1769 0010 052C     		cmp	r4, #5
 1770 0012 04D9     		bls	.L115
 485:Drivers/BSP/nrf24l01/nrf24.c **** 		// Get payload length
 486:Drivers/BSP/nrf24l01/nrf24.c **** 		*length = nRF24_ReadReg(nRF24_REG_RX_PW_P0 + pipe);
 487:Drivers/BSP/nrf24l01/nrf24.c **** 
 488:Drivers/BSP/nrf24l01/nrf24.c **** 		// Read a payload from the RX FIFO
 489:Drivers/BSP/nrf24l01/nrf24.c **** 		if (*length) {
 490:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_ReadMBReg(nRF24_CMD_R_RX_PAYLOAD, pBuf, *length);
 491:Drivers/BSP/nrf24l01/nrf24.c **** 		}
 492:Drivers/BSP/nrf24l01/nrf24.c **** 
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 42


 493:Drivers/BSP/nrf24l01/nrf24.c **** 		return ((nRF24_RXResult)pipe);
 494:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 495:Drivers/BSP/nrf24l01/nrf24.c **** 
 496:Drivers/BSP/nrf24l01/nrf24.c **** 	// The RX FIFO is empty
 497:Drivers/BSP/nrf24l01/nrf24.c **** 	*length = 0U;
 1771              		.loc 1 497 2 is_stmt 1 view .LVU384
 1772              		.loc 1 497 10 is_stmt 0 view .LVU385
 1773 0014 0023     		movs	r3, #0
 1774 0016 2B70     		strb	r3, [r5]
 498:Drivers/BSP/nrf24l01/nrf24.c **** 
 499:Drivers/BSP/nrf24l01/nrf24.c **** 	return nRF24_RX_EMPTY;
 1775              		.loc 1 499 2 is_stmt 1 view .LVU386
 1776              		.loc 1 499 9 is_stmt 0 view .LVU387
 1777 0018 FF24     		movs	r4, #255
 1778              	.LVL192:
 1779              	.L113:
 500:Drivers/BSP/nrf24l01/nrf24.c **** }
 1780              		.loc 1 500 1 view .LVU388
 1781 001a 2046     		mov	r0, r4
 1782 001c 70BD     		pop	{r4, r5, r6, pc}
 1783              	.LVL193:
 1784              	.L115:
 486:Drivers/BSP/nrf24l01/nrf24.c **** 
 1785              		.loc 1 486 3 is_stmt 1 view .LVU389
 486:Drivers/BSP/nrf24l01/nrf24.c **** 
 1786              		.loc 1 486 13 is_stmt 0 view .LVU390
 1787 001e 04F11100 		add	r0, r4, #17
 1788 0022 FFF7FEFF 		bl	nRF24_ReadReg
 1789              	.LVL194:
 486:Drivers/BSP/nrf24l01/nrf24.c **** 
 1790              		.loc 1 486 11 view .LVU391
 1791 0026 2870     		strb	r0, [r5]
 489:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_ReadMBReg(nRF24_CMD_R_RX_PAYLOAD, pBuf, *length);
 1792              		.loc 1 489 3 is_stmt 1 view .LVU392
 489:Drivers/BSP/nrf24l01/nrf24.c **** 			nRF24_ReadMBReg(nRF24_CMD_R_RX_PAYLOAD, pBuf, *length);
 1793              		.loc 1 489 6 is_stmt 0 view .LVU393
 1794 0028 0028     		cmp	r0, #0
 1795 002a F6D0     		beq	.L113
 490:Drivers/BSP/nrf24l01/nrf24.c **** 		}
 1796              		.loc 1 490 4 is_stmt 1 view .LVU394
 1797 002c 0246     		mov	r2, r0
 1798 002e 3146     		mov	r1, r6
 1799 0030 6120     		movs	r0, #97
 1800 0032 FFF7FEFF 		bl	nRF24_ReadMBReg
 1801              	.LVL195:
 493:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1802              		.loc 1 493 3 view .LVU395
 493:Drivers/BSP/nrf24l01/nrf24.c **** 	}
 1803              		.loc 1 493 11 is_stmt 0 view .LVU396
 1804 0036 F0E7     		b	.L113
 1805              		.cfi_endproc
 1806              	.LFE142:
 1808              		.section	.rodata.nRF24_ADDR_REGS,"a"
 1809              		.align	2
 1810              		.set	.LANCHOR0,. + 0
 1813              	nRF24_ADDR_REGS:
 1814 0000 0A0B0C0D 		.ascii	"\012\013\014\015\016\017\020"
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 43


 1814      0E0F10
 1815              		.text
 1816              	.Letext0:
 1817              		.file 2 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 1818              		.file 3 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\lock.h"
 1819              		.file 4 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\_types.h"
 1820              		.file 5 "c:\\vsarm\\armcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 1821              		.file 6 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\reent.h"
 1822              		.file 7 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\math.h"
 1823              		.file 8 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 1824              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 1825              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1826              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1827              		.file 12 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1828              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1829              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1830              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1831              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1832              		.file 17 "App/Inc/hw_i2c.h"
 1833              		.file 18 "Drivers/BSP/nrf24l01/nrf24.h"
 1834              		.file 19 "App/Inc/hw_gpio.h"
 1835              		.file 20 "Drivers/BSP/nrf24l01/nrf24_hal.h"
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 nrf24.c
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:16     .text.nRF24_WriteReg:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:23     .text.nRF24_WriteReg:00000000 nRF24_WriteReg
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:98     .text.nRF24_WriteReg:00000050 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:103    .text.nRF24_WriteMBReg:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:109    .text.nRF24_WriteMBReg:00000000 nRF24_WriteMBReg
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:177    .text.nRF24_WriteMBReg:00000038 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:182    .text.nRF24_ReadMBReg:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:188    .text.nRF24_ReadMBReg:00000000 nRF24_ReadMBReg
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:257    .text.nRF24_ReadMBReg:00000038 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:262    .text.nRF24_ReadReg:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:268    .text.nRF24_ReadReg:00000000 nRF24_ReadReg
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:320    .text.nRF24_ReadReg:00000030 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:325    .rodata.nRF24_Check.str1.4:00000000 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:329    .text.nRF24_Check:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:336    .text.nRF24_Check:00000000 nRF24_Check
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:419    .text.nRF24_Check:00000044 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:424    .text.nRF24_SetPowerMode:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:431    .text.nRF24_SetPowerMode:00000000 nRF24_SetPowerMode
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:481    .text.nRF24_SetOperationalMode:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:488    .text.nRF24_SetOperationalMode:00000000 nRF24_SetOperationalMode
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:532    .text.nRF24_SetCRCScheme:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:539    .text.nRF24_SetCRCScheme:00000000 nRF24_SetCRCScheme
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:583    .text.nRF24_SetRFChannel:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:590    .text.nRF24_SetRFChannel:00000000 nRF24_SetRFChannel
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:616    .text.nRF24_SetAutoRetr:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:623    .text.nRF24_SetAutoRetr:00000000 nRF24_SetAutoRetr
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:655    .text.nRF24_SetAddrWidth:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:662    .text.nRF24_SetAddrWidth:00000000 nRF24_SetAddrWidth
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:689    .text.nRF24_SetTXPower:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:696    .text.nRF24_SetTXPower:00000000 nRF24_SetTXPower
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:736    .text.nRF24_SetDataRate:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:743    .text.nRF24_SetDataRate:00000000 nRF24_SetDataRate
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:783    .text.nRF24_SetRXPipe:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:790    .text.nRF24_SetRXPipe:00000000 nRF24_SetRXPipe
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:874    .text.nRF24_ClosePipe:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:881    .text.nRF24_ClosePipe:00000000 nRF24_ClosePipe
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:927    .text.nRF24_EnableAA:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:934    .text.nRF24_EnableAA:00000000 nRF24_EnableAA
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:975    .text.nRF24_DisableAA:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:982    .text.nRF24_DisableAA:00000000 nRF24_DisableAA
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1041   .text.nRF24_GetAddrWidth:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1048   .text.nRF24_GetAddrWidth:00000000 nRF24_GetAddrWidth
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1073   .text.nRF24_SetAddr:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1080   .text.nRF24_SetAddr:00000000 nRF24_SetAddr
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1151   .text.nRF24_SetAddr:0000003c $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1156   .text.nRF24_GetStatus:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1163   .text.nRF24_GetStatus:00000000 nRF24_GetStatus
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1185   .text.nRF24_GetIRQFlags:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1192   .text.nRF24_GetIRQFlags:00000000 nRF24_GetIRQFlags
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1215   .text.nRF24_GetStatus_RXFIFO:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1222   .text.nRF24_GetStatus_RXFIFO:00000000 nRF24_GetStatus_RXFIFO
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1245   .text.nRF24_GetStatus_TXFIFO:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1252   .text.nRF24_GetStatus_TXFIFO:00000000 nRF24_GetStatus_TXFIFO
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1275   .text.nRF24_GetRXSource:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1282   .text.nRF24_GetRXSource:00000000 nRF24_GetRXSource
ARM GAS  C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s 			page 45


C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1305   .text.nRF24_GetRetransmitCounters:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1312   .text.nRF24_GetRetransmitCounters:00000000 nRF24_GetRetransmitCounters
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1334   .text.nRF24_ResetPLOS:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1341   .text.nRF24_ResetPLOS:00000000 nRF24_ResetPLOS
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1370   .text.nRF24_FlushTX:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1377   .text.nRF24_FlushTX:00000000 nRF24_FlushTX
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1399   .text.nRF24_FlushRX:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1406   .text.nRF24_FlushRX:00000000 nRF24_FlushRX
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1428   .text.nRF24_ClearIRQFlags:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1435   .text.nRF24_ClearIRQFlags:00000000 nRF24_ClearIRQFlags
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1468   .text.nRF24_Init:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1475   .text.nRF24_Init:00000000 nRF24_Init
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1691   .text.nRF24_Init:00000100 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1696   .text.nRF24_WritePayload:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1703   .text.nRF24_WritePayload:00000000 nRF24_WritePayload
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1732   .text.nRF24_ReadPayload:00000000 $t
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1739   .text.nRF24_ReadPayload:00000000 nRF24_ReadPayload
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1809   .rodata.nRF24_ADDR_REGS:00000000 $d
C:\Users\jsauerer\AppData\Local\Temp\ccFOFbgj.s:1813   .rodata.nRF24_ADDR_REGS:00000000 nRF24_ADDR_REGS

UNDEFINED SYMBOLS
HW_GPIO_Write
nRF24_LL_RW
